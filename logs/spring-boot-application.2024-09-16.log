2024-09-16 13:03:04 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-09-16 13:03:04 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Starting PaymentServiceApplication using Java 17.0.11 with PID 332580 (/home/kacha/Project/e-commerce/paymentservice/target/classes started by kacha in /home/kacha/Project/e-commerce/paymentservice)
2024-09-16 13:03:04 [restartedMain] INFO  c.e.p.PaymentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2024-09-16 13:03:04 [restartedMain] INFO  o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in /home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar referenced one or more files that do not exist: file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-api-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/txw2-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/istack-commons-runtime-3.0.7.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/stax-ex-1.8.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/FastInfoset-1.2.15.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/javax.activation-api-1.2.0.jar
2024-09-16 13:03:04 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-09-16 13:03:04 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-09-16 13:03:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-16 13:03:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 62 ms. Found 1 JPA repository interface.
2024-09-16 13:03:05 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=cfe316e4-ca49-38a2-a81a-6ef759a9c63f
2024-09-16 13:03:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-16 13:03:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:03:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:03:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:03:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:03:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$712/0x00007f77944d4c80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:03:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:03:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:03:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:03:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:03:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:03:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:03:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:03:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:03:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:03:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:03:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:03:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:03:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:03:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:03:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-16 13:03:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:03:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:03:06 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8183 (http)
2024-09-16 13:03:06 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8183"]
2024-09-16 13:03:06 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-16 13:03:06 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-09-16 13:03:06 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/payments] - Initializing Spring embedded WebApplicationContext
2024-09-16 13:03:06 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1136 ms
2024-09-16 13:03:06 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-16 13:03:06 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-16 13:03:06 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-16 13:03:06 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-16 13:03:06 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-16 13:03:06 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@46428cda
2024-09-16 13:03:06 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-16 13:03:06 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JTA platform [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
2024-09-16 13:03:06 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-16 13:03:07 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-16 13:03:07 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2024-09-16 13:03:07 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-16 13:03:08 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-16 13:03:08 [restartedMain] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-09-16 13:03:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 13:03:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 13:03:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726480988161
2024-09-16 13:03:08 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2024-09-16 13:03:08 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 13:03:08 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 13:03:08 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 13:03:08 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2024-09-16 13:03:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2024-09-16 13:03:08 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 13:03:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2024-09-16 13:03:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2024-09-16 13:03:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2024-09-16 13:03:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2024-09-16 13:03:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2024-09-16 13:03:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2024-09-16 13:03:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2024-09-16 13:03:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2024-09-16 13:03:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2024-09-16 13:03:08 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-09-16 13:03:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1726480988503 with initial instances count: 0
2024-09-16 13:03:08 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application PAYMENT-SERVICE with eureka with status UP
2024-09-16 13:03:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1726480988506, current=UP, previous=STARTING]
2024-09-16 13:03:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-16 13:03:08 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8183"]
2024-09-16 13:03:08 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8183 (http) with context path '/payments'
2024-09-16 13:03:08 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8183
2024-09-16 13:03:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-16 13:03:08 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-dlt-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-dlt
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 13:03:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 13:03:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 13:03:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726480988702
2024-09-16 13:03:08 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Subscribed to topic(s): order-topic-dlt
2024-09-16 13:03:08 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-3000-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-3000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 13:03:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 13:03:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 13:03:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726480988710
2024-09-16 13:03:08 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Subscribed to topic(s): order-topic-retry-3000
2024-09-16 13:03:08 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-6000-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-6000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 13:03:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 13:03:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 13:03:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726480988714
2024-09-16 13:03:08 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Subscribed to topic(s): order-topic-retry-6000
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 13:03:08 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 13:03:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 13:03:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 13:03:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726480988719
2024-09-16 13:03:08 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Subscribed to topic(s): order-topic
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-16 13:03:08 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Started PaymentServiceApplication in 4.167 seconds (process running for 4.46)
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-dlt-1-f0616534-4e25-4f19-a2bd-0fc19357a3e5
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-4-f95ce546-ec78-4e1e-a22e-c615d5f7023e
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-3000-2-41ad7e5a-77ba-454d-845c-17cf157cedeb
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-6000-3-35f15234-29e7-4b8e-ad35-a2426f902b5d
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully joined group with generation Generation{generationId=15, memberId='consumer-payment-service-dlt-1-f0616534-4e25-4f19-a2bd-0fc19357a3e5', protocol='range'}
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully joined group with generation Generation{generationId=15, memberId='consumer-payment-service-4-f95ce546-ec78-4e1e-a22e-c615d5f7023e', protocol='range'}
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully joined group with generation Generation{generationId=15, memberId='consumer-payment-service-retry-3000-2-41ad7e5a-77ba-454d-845c-17cf157cedeb', protocol='range'}
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully joined group with generation Generation{generationId=15, memberId='consumer-payment-service-retry-6000-3-35f15234-29e7-4b8e-ad35-a2426f902b5d', protocol='range'}
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Finished assignment for group at generation 15: {consumer-payment-service-4-f95ce546-ec78-4e1e-a22e-c615d5f7023e=Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])}
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Finished assignment for group at generation 15: {consumer-payment-service-retry-6000-3-35f15234-29e7-4b8e-ad35-a2426f902b5d=Assignment(partitions=[order-topic-retry-6000-0])}
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Finished assignment for group at generation 15: {consumer-payment-service-dlt-1-f0616534-4e25-4f19-a2bd-0fc19357a3e5=Assignment(partitions=[order-topic-dlt-0])}
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Finished assignment for group at generation 15: {consumer-payment-service-retry-3000-2-41ad7e5a-77ba-454d-845c-17cf157cedeb=Assignment(partitions=[order-topic-retry-3000-0])}
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully synced group in generation Generation{generationId=15, memberId='consumer-payment-service-dlt-1-f0616534-4e25-4f19-a2bd-0fc19357a3e5', protocol='range'}
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Notifying assignor about the new Assignment(partitions=[order-topic-dlt-0])
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Adding newly assigned partitions: order-topic-dlt-0
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully synced group in generation Generation{generationId=15, memberId='consumer-payment-service-4-f95ce546-ec78-4e1e-a22e-c615d5f7023e', protocol='range'}
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Notifying assignor about the new Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Adding newly assigned partitions: order-topic-0, order-topic-1, order-topic-2
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully synced group in generation Generation{generationId=15, memberId='consumer-payment-service-retry-3000-2-41ad7e5a-77ba-454d-845c-17cf157cedeb', protocol='range'}
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully synced group in generation Generation{generationId=15, memberId='consumer-payment-service-retry-6000-3-35f15234-29e7-4b8e-ad35-a2426f902b5d', protocol='range'}
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-3000-0])
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-6000-0])
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Adding newly assigned partitions: order-topic-retry-3000-0
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Adding newly assigned partitions: order-topic-retry-6000-0
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Setting offset for partition order-topic-retry-6000-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Setting offset for partition order-topic-retry-3000-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions assigned: [order-topic-retry-3000-0]
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions assigned: [order-topic-retry-6000-0]
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-2 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-1 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions assigned: [order-topic-0, order-topic-1, order-topic-2]
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Setting offset for partition order-topic-dlt-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 13:03:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions assigned: [order-topic-dlt-0]
2024-09-16 13:03:38 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2024-09-16 13:03:38 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2024-09-16 13:03:38 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2024-09-16 13:03:38 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2024-09-16 13:03:38 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2024-09-16 13:03:38 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: false
2024-09-16 13:03:38 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2024-09-16 13:03:38 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2024-09-16 13:06:56 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application PAYMENT-SERVICE with eureka with status DOWN
2024-09-16 13:06:56 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1726481216911, current=DOWN, previous=UP]
2024-09-16 13:06:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Revoke previously assigned partitions order-topic-retry-6000-0
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Revoke previously assigned partitions order-topic-dlt-0
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Revoke previously assigned partitions order-topic-0, order-topic-1, order-topic-2
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Revoke previously assigned partitions order-topic-retry-3000-0
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions revoked: [order-topic-retry-6000-0]
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions revoked: [order-topic-dlt-0]
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions revoked: [order-topic-retry-3000-0]
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions revoked: [order-topic-0, order-topic-1, order-topic-2]
2024-09-16 13:06:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Member consumer-payment-service-retry-6000-3-35f15234-29e7-4b8e-ad35-a2426f902b5d sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Member consumer-payment-service-dlt-1-f0616534-4e25-4f19-a2bd-0fc19357a3e5 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Member consumer-payment-service-4-f95ce546-ec78-4e1e-a22e-c615d5f7023e sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Member consumer-payment-service-retry-3000-2-41ad7e5a-77ba-454d-845c-17cf157cedeb sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 13:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 13:06:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 13:06:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 13:06:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 13:06:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-3000-2 unregistered
2024-09-16 13:06:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: Consumer stopped
2024-09-16 13:06:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 13:06:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 13:06:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 13:06:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-4 unregistered
2024-09-16 13:06:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: Consumer stopped
2024-09-16 13:06:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 13:06:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 13:06:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 13:06:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 13:06:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 13:06:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 13:06:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-dlt-1 unregistered
2024-09-16 13:06:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: Consumer stopped
2024-09-16 13:06:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-6000-3 unregistered
2024-09-16 13:06:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: Consumer stopped
2024-09-16 13:06:57 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-16 13:06:57 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-16 13:06:57 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-16 13:06:57 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2024-09-16 13:07:00 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2024-09-16 13:07:00 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - deregister  status: 200
2024-09-16 13:07:00 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2024-09-16 13:07:09 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-09-16 13:07:09 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Starting PaymentServiceApplication using Java 17.0.11 with PID 332974 (/home/kacha/Project/e-commerce/paymentservice/target/classes started by kacha in /home/kacha/Project/e-commerce/paymentservice)
2024-09-16 13:07:09 [restartedMain] INFO  c.e.p.PaymentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2024-09-16 13:07:09 [restartedMain] INFO  o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in /home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar referenced one or more files that do not exist: file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-api-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/txw2-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/istack-commons-runtime-3.0.7.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/stax-ex-1.8.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/FastInfoset-1.2.15.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/javax.activation-api-1.2.0.jar
2024-09-16 13:07:09 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-09-16 13:07:09 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-09-16 13:07:09 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-16 13:07:09 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54 ms. Found 1 JPA repository interface.
2024-09-16 13:07:09 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=cfe316e4-ca49-38a2-a81a-6ef759a9c63f
2024-09-16 13:07:10 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-16 13:07:10 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:07:10 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:07:10 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:07:10 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:07:10 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$712/0x000076c2784ecc80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:07:10 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:07:10 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:07:10 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:07:10 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:07:10 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:07:10 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:07:10 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:07:10 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:07:10 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:07:10 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:07:10 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:07:10 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:07:10 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:07:10 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:07:10 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-16 13:07:10 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:07:10 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:07:10 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8183 (http)
2024-09-16 13:07:10 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8183"]
2024-09-16 13:07:10 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-16 13:07:10 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-09-16 13:07:10 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/payments] - Initializing Spring embedded WebApplicationContext
2024-09-16 13:07:10 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 960 ms
2024-09-16 13:07:10 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-16 13:07:10 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-16 13:07:10 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-16 13:07:10 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-16 13:07:10 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-16 13:07:10 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@42695731
2024-09-16 13:07:10 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-16 13:07:11 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JTA platform [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
2024-09-16 13:07:11 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-16 13:07:11 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-16 13:07:11 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2024-09-16 13:07:11 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-16 13:07:12 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-16 13:07:12 [restartedMain] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-09-16 13:07:12 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 13:07:12 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 13:07:12 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726481232335
2024-09-16 13:07:12 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2024-09-16 13:07:12 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 13:07:12 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 13:07:12 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 13:07:12 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2024-09-16 13:07:12 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2024-09-16 13:07:12 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 13:07:12 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2024-09-16 13:07:12 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2024-09-16 13:07:12 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2024-09-16 13:07:12 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2024-09-16 13:07:12 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2024-09-16 13:07:12 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2024-09-16 13:07:12 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2024-09-16 13:07:12 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2024-09-16 13:07:12 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2024-09-16 13:07:12 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-09-16 13:07:12 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1726481232653 with initial instances count: 1
2024-09-16 13:07:12 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application PAYMENT-SERVICE with eureka with status UP
2024-09-16 13:07:12 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1726481232656, current=UP, previous=STARTING]
2024-09-16 13:07:12 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-16 13:07:12 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8183"]
2024-09-16 13:07:12 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8183 (http) with context path '/payments'
2024-09-16 13:07:12 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8183
2024-09-16 13:07:12 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-16 13:07:12 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-dlt-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-dlt
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 13:07:12 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 13:07:12 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 13:07:12 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726481232907
2024-09-16 13:07:12 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Subscribed to topic(s): order-topic-dlt
2024-09-16 13:07:12 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-3000-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-3000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 13:07:12 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 13:07:12 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 13:07:12 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726481232914
2024-09-16 13:07:12 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Subscribed to topic(s): order-topic-retry-3000
2024-09-16 13:07:12 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-6000-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-6000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-16 13:07:12 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 13:07:12 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 13:07:12 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726481232920
2024-09-16 13:07:12 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Subscribed to topic(s): order-topic-retry-6000
2024-09-16 13:07:12 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-16 13:07:12 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 13:07:12 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 13:07:12 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726481232925
2024-09-16 13:07:12 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Subscribed to topic(s): order-topic
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-dlt-1-e61c78ff-6779-40d6-9f36-81a14f83ab78
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-6000-3-e3917a48-8823-4d13-b66c-749956cf3f75
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-3000-2-5967f406-722b-4e59-9cf8-33e98946d0c9
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-4-3acab9ec-f1fb-4c86-a32f-422e657b13a4
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully joined group with generation Generation{generationId=17, memberId='consumer-payment-service-dlt-1-e61c78ff-6779-40d6-9f36-81a14f83ab78', protocol='range'}
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully joined group with generation Generation{generationId=17, memberId='consumer-payment-service-retry-3000-2-5967f406-722b-4e59-9cf8-33e98946d0c9', protocol='range'}
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully joined group with generation Generation{generationId=17, memberId='consumer-payment-service-retry-6000-3-e3917a48-8823-4d13-b66c-749956cf3f75', protocol='range'}
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully joined group with generation Generation{generationId=17, memberId='consumer-payment-service-4-3acab9ec-f1fb-4c86-a32f-422e657b13a4', protocol='range'}
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Finished assignment for group at generation 17: {consumer-payment-service-retry-6000-3-e3917a48-8823-4d13-b66c-749956cf3f75=Assignment(partitions=[order-topic-retry-6000-0])}
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Finished assignment for group at generation 17: {consumer-payment-service-dlt-1-e61c78ff-6779-40d6-9f36-81a14f83ab78=Assignment(partitions=[order-topic-dlt-0])}
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Finished assignment for group at generation 17: {consumer-payment-service-retry-3000-2-5967f406-722b-4e59-9cf8-33e98946d0c9=Assignment(partitions=[order-topic-retry-3000-0])}
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Finished assignment for group at generation 17: {consumer-payment-service-4-3acab9ec-f1fb-4c86-a32f-422e657b13a4=Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])}
2024-09-16 13:07:12 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Started PaymentServiceApplication in 4.12 seconds (process running for 4.346)
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully synced group in generation Generation{generationId=17, memberId='consumer-payment-service-4-3acab9ec-f1fb-4c86-a32f-422e657b13a4', protocol='range'}
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully synced group in generation Generation{generationId=17, memberId='consumer-payment-service-dlt-1-e61c78ff-6779-40d6-9f36-81a14f83ab78', protocol='range'}
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully synced group in generation Generation{generationId=17, memberId='consumer-payment-service-retry-6000-3-e3917a48-8823-4d13-b66c-749956cf3f75', protocol='range'}
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully synced group in generation Generation{generationId=17, memberId='consumer-payment-service-retry-3000-2-5967f406-722b-4e59-9cf8-33e98946d0c9', protocol='range'}
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-3000-0])
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Notifying assignor about the new Assignment(partitions=[order-topic-dlt-0])
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Notifying assignor about the new Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-6000-0])
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Adding newly assigned partitions: order-topic-retry-6000-0
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Adding newly assigned partitions: order-topic-0, order-topic-1, order-topic-2
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Adding newly assigned partitions: order-topic-dlt-0
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Adding newly assigned partitions: order-topic-retry-3000-0
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Setting offset for partition order-topic-retry-6000-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Setting offset for partition order-topic-dlt-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-2 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Setting offset for partition order-topic-retry-3000-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-1 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions assigned: [order-topic-retry-6000-0]
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions assigned: [order-topic-0, order-topic-1, order-topic-2]
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions assigned: [order-topic-retry-3000-0]
2024-09-16 13:07:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions assigned: [order-topic-dlt-0]
2024-09-16 13:11:01 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application PAYMENT-SERVICE with eureka with status DOWN
2024-09-16 13:11:01 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1726481461538, current=DOWN, previous=UP]
2024-09-16 13:11:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Revoke previously assigned partitions order-topic-retry-3000-0
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Revoke previously assigned partitions order-topic-0, order-topic-1, order-topic-2
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Revoke previously assigned partitions order-topic-retry-6000-0
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Revoke previously assigned partitions order-topic-dlt-0
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions revoked: [order-topic-retry-3000-0]
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions revoked: [order-topic-dlt-0]
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions revoked: [order-topic-0, order-topic-1, order-topic-2]
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions revoked: [order-topic-retry-6000-0]
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Member consumer-payment-service-retry-3000-2-5967f406-722b-4e59-9cf8-33e98946d0c9 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Member consumer-payment-service-4-3acab9ec-f1fb-4c86-a32f-422e657b13a4 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Member consumer-payment-service-retry-6000-3-e3917a48-8823-4d13-b66c-749956cf3f75 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Member consumer-payment-service-dlt-1-e61c78ff-6779-40d6-9f36-81a14f83ab78 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 13:11:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-4 unregistered
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-dlt-1 unregistered
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: Consumer stopped
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: Consumer stopped
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-3000-2 unregistered
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: Consumer stopped
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-6000-3 unregistered
2024-09-16 13:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: Consumer stopped
2024-09-16 13:11:01 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-16 13:11:01 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-16 13:11:01 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-16 13:11:01 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2024-09-16 13:11:04 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2024-09-16 13:11:04 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - deregister  status: 200
2024-09-16 13:11:04 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2024-09-16 13:28:50 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-09-16 13:28:50 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Starting PaymentServiceApplication using Java 17.0.11 with PID 334660 (/home/kacha/Project/e-commerce/paymentservice/target/classes started by kacha in /home/kacha/Project/e-commerce/paymentservice)
2024-09-16 13:28:50 [restartedMain] INFO  c.e.p.PaymentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2024-09-16 13:28:50 [restartedMain] INFO  o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in /home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar referenced one or more files that do not exist: file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-api-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/txw2-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/istack-commons-runtime-3.0.7.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/stax-ex-1.8.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/FastInfoset-1.2.15.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/javax.activation-api-1.2.0.jar
2024-09-16 13:28:50 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-09-16 13:28:50 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-09-16 13:28:50 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-16 13:28:50 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 58 ms. Found 1 JPA repository interface.
2024-09-16 13:28:50 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=cfe316e4-ca49-38a2-a81a-6ef759a9c63f
2024-09-16 13:28:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-16 13:28:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:28:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:28:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:28:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:28:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$712/0x00007ca6204ed398] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:28:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:28:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:28:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:28:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:28:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:28:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:28:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:28:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:28:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:28:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:28:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:28:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:28:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:28:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:28:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-16 13:28:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:28:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 13:28:51 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8183 (http)
2024-09-16 13:28:51 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8183"]
2024-09-16 13:28:51 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-16 13:28:51 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-09-16 13:28:51 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/payments] - Initializing Spring embedded WebApplicationContext
2024-09-16 13:28:51 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1019 ms
2024-09-16 13:28:51 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-16 13:28:51 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-16 13:28:51 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-16 13:28:51 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-16 13:28:51 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-16 13:28:51 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2f2fe477
2024-09-16 13:28:51 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-16 13:28:51 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JTA platform [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
2024-09-16 13:28:51 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-16 13:28:52 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-16 13:28:52 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2024-09-16 13:28:52 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-16 13:28:52 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-16 13:28:52 [restartedMain] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-09-16 13:28:52 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 13:28:52 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 13:28:52 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726482532839
2024-09-16 13:28:52 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2024-09-16 13:28:52 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 13:28:52 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 13:28:52 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 13:28:52 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2024-09-16 13:28:53 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2024-09-16 13:28:53 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 13:28:53 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2024-09-16 13:28:53 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2024-09-16 13:28:53 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2024-09-16 13:28:53 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2024-09-16 13:28:53 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2024-09-16 13:28:53 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2024-09-16 13:28:53 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2024-09-16 13:28:53 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2024-09-16 13:28:53 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2024-09-16 13:28:53 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-09-16 13:28:53 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1726482533152 with initial instances count: 0
2024-09-16 13:28:53 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application PAYMENT-SERVICE with eureka with status UP
2024-09-16 13:28:53 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1726482533155, current=UP, previous=STARTING]
2024-09-16 13:28:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-16 13:28:53 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8183"]
2024-09-16 13:28:53 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8183 (http) with context path '/payments'
2024-09-16 13:28:53 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8183
2024-09-16 13:28:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-16 13:28:53 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-dlt-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-dlt
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 13:28:53 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 13:28:53 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 13:28:53 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726482533219
2024-09-16 13:28:53 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Subscribed to topic(s): order-topic-dlt
2024-09-16 13:28:53 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-3000-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-3000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 13:28:53 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 13:28:53 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 13:28:53 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726482533225
2024-09-16 13:28:53 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Subscribed to topic(s): order-topic-retry-3000
2024-09-16 13:28:53 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-6000-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-6000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 13:28:53 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 13:28:53 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 13:28:53 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726482533229
2024-09-16 13:28:53 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Subscribed to topic(s): order-topic-retry-6000
2024-09-16 13:28:53 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 13:28:53 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 13:28:53 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 13:28:53 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726482533231
2024-09-16 13:28:53 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Subscribed to topic(s): order-topic
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-6000-3-0555100a-e133-4af9-80a6-7c301796541a
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-dlt-1-bf0b9874-eccf-4fcf-a478-f29ead6373a5
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-3000-2-acca56d8-9905-455f-a09d-bbd2feec44a7
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-4-b5979be2-680a-413c-bf3b-2ec789f6be40
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-16 13:28:53 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Started PaymentServiceApplication in 3.408 seconds (process running for 3.623)
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully joined group with generation Generation{generationId=19, memberId='consumer-payment-service-4-b5979be2-680a-413c-bf3b-2ec789f6be40', protocol='range'}
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully joined group with generation Generation{generationId=19, memberId='consumer-payment-service-retry-6000-3-0555100a-e133-4af9-80a6-7c301796541a', protocol='range'}
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully joined group with generation Generation{generationId=19, memberId='consumer-payment-service-retry-3000-2-acca56d8-9905-455f-a09d-bbd2feec44a7', protocol='range'}
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully joined group with generation Generation{generationId=19, memberId='consumer-payment-service-dlt-1-bf0b9874-eccf-4fcf-a478-f29ead6373a5', protocol='range'}
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Finished assignment for group at generation 19: {consumer-payment-service-dlt-1-bf0b9874-eccf-4fcf-a478-f29ead6373a5=Assignment(partitions=[order-topic-dlt-0])}
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Finished assignment for group at generation 19: {consumer-payment-service-4-b5979be2-680a-413c-bf3b-2ec789f6be40=Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])}
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Finished assignment for group at generation 19: {consumer-payment-service-retry-3000-2-acca56d8-9905-455f-a09d-bbd2feec44a7=Assignment(partitions=[order-topic-retry-3000-0])}
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Finished assignment for group at generation 19: {consumer-payment-service-retry-6000-3-0555100a-e133-4af9-80a6-7c301796541a=Assignment(partitions=[order-topic-retry-6000-0])}
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully synced group in generation Generation{generationId=19, memberId='consumer-payment-service-dlt-1-bf0b9874-eccf-4fcf-a478-f29ead6373a5', protocol='range'}
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully synced group in generation Generation{generationId=19, memberId='consumer-payment-service-retry-6000-3-0555100a-e133-4af9-80a6-7c301796541a', protocol='range'}
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully synced group in generation Generation{generationId=19, memberId='consumer-payment-service-retry-3000-2-acca56d8-9905-455f-a09d-bbd2feec44a7', protocol='range'}
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully synced group in generation Generation{generationId=19, memberId='consumer-payment-service-4-b5979be2-680a-413c-bf3b-2ec789f6be40', protocol='range'}
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Notifying assignor about the new Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-6000-0])
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-3000-0])
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Notifying assignor about the new Assignment(partitions=[order-topic-dlt-0])
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Adding newly assigned partitions: order-topic-0, order-topic-1, order-topic-2
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Adding newly assigned partitions: order-topic-retry-3000-0
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Adding newly assigned partitions: order-topic-dlt-0
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Adding newly assigned partitions: order-topic-retry-6000-0
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-2 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Setting offset for partition order-topic-retry-6000-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Setting offset for partition order-topic-retry-3000-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Setting offset for partition order-topic-dlt-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-1 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions assigned: [order-topic-dlt-0]
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions assigned: [order-topic-retry-6000-0]
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions assigned: [order-topic-retry-3000-0]
2024-09-16 13:28:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions assigned: [order-topic-0, order-topic-1, order-topic-2]
2024-09-16 13:29:23 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2024-09-16 13:29:23 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2024-09-16 13:29:23 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2024-09-16 13:29:23 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2024-09-16 13:29:23 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2024-09-16 13:29:23 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: false
2024-09-16 13:29:23 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2024-09-16 13:29:23 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2024-09-16 13:33:53 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-16 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-16 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-16 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-16 13:38:53 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 13:43:53 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 13:48:53 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 13:53:53 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 13:58:53 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 14:03:53 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 14:08:53 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 14:13:53 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 14:18:53 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 14:23:53 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 14:28:53 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 14:33:53 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 14:38:53 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 14:43:53 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 14:48:53 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 14:53:01 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application PAYMENT-SERVICE with eureka with status DOWN
2024-09-16 14:53:01 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1726487581514, current=DOWN, previous=UP]
2024-09-16 14:53:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Revoke previously assigned partitions order-topic-dlt-0
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Revoke previously assigned partitions order-topic-retry-6000-0
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Revoke previously assigned partitions order-topic-retry-3000-0
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Revoke previously assigned partitions order-topic-0, order-topic-1, order-topic-2
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions revoked: [order-topic-dlt-0]
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions revoked: [order-topic-retry-3000-0]
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions revoked: [order-topic-retry-6000-0]
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions revoked: [order-topic-0, order-topic-1, order-topic-2]
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Member consumer-payment-service-dlt-1-bf0b9874-eccf-4fcf-a478-f29ead6373a5 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Member consumer-payment-service-4-b5979be2-680a-413c-bf3b-2ec789f6be40 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Member consumer-payment-service-retry-3000-2-acca56d8-9905-455f-a09d-bbd2feec44a7 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Member consumer-payment-service-retry-6000-3-0555100a-e133-4af9-80a6-7c301796541a sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 14:53:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-3000-2 unregistered
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-4 unregistered
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-dlt-1 unregistered
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: Consumer stopped
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: Consumer stopped
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: Consumer stopped
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-6000-3 unregistered
2024-09-16 14:53:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: Consumer stopped
2024-09-16 14:53:01 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-16 14:53:01 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-16 14:53:01 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-16 14:53:01 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2024-09-16 14:53:04 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2024-09-16 14:53:04 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - deregister  status: 200
2024-09-16 14:53:04 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2024-09-16 14:53:12 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-09-16 14:53:12 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Starting PaymentServiceApplication using Java 17.0.11 with PID 339156 (/home/kacha/Project/e-commerce/paymentservice/target/classes started by kacha in /home/kacha/Project/e-commerce/paymentservice)
2024-09-16 14:53:12 [restartedMain] INFO  c.e.p.PaymentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2024-09-16 14:53:12 [restartedMain] INFO  o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in /home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar referenced one or more files that do not exist: file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-api-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/txw2-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/istack-commons-runtime-3.0.7.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/stax-ex-1.8.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/FastInfoset-1.2.15.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/javax.activation-api-1.2.0.jar
2024-09-16 14:53:12 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-09-16 14:53:12 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-09-16 14:53:13 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-16 14:53:13 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60 ms. Found 1 JPA repository interface.
2024-09-16 14:53:13 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=bb937d62-efc6-3637-95ac-76e931403e2b
2024-09-16 14:53:13 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-16 14:53:13 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:53:13 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:53:13 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:53:13 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:53:13 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$712/0x0000710e404cc800] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:53:13 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:53:13 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:53:13 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:53:13 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:53:13 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:53:13 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:53:13 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:53:13 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:53:13 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:53:13 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:53:13 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:53:13 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:53:13 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:53:13 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:53:13 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-16 14:53:13 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:53:13 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:53:13 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8183 (http)
2024-09-16 14:53:13 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8183"]
2024-09-16 14:53:13 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-16 14:53:13 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-09-16 14:53:13 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/payments] - Initializing Spring embedded WebApplicationContext
2024-09-16 14:53:13 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1064 ms
2024-09-16 14:53:13 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-16 14:53:13 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-16 14:53:13 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-16 14:53:13 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-16 14:53:13 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-16 14:53:13 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@63004ec6
2024-09-16 14:53:13 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-16 14:53:14 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JTA platform [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
2024-09-16 14:53:14 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-16 14:53:14 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-16 14:53:15 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2024-09-16 14:53:15 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-16 14:53:15 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-16 14:53:15 [restartedMain] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-09-16 14:53:15 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 14:53:15 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 14:53:15 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726487595277
2024-09-16 14:53:15 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2024-09-16 14:53:15 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 14:53:15 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 14:53:15 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 14:53:15 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2024-09-16 14:53:15 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2024-09-16 14:53:15 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 14:53:15 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2024-09-16 14:53:15 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2024-09-16 14:53:15 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2024-09-16 14:53:15 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2024-09-16 14:53:15 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2024-09-16 14:53:15 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2024-09-16 14:53:15 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2024-09-16 14:53:15 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2024-09-16 14:53:15 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2024-09-16 14:53:15 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-09-16 14:53:15 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1726487595612 with initial instances count: 1
2024-09-16 14:53:15 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application PAYMENT-SERVICE with eureka with status UP
2024-09-16 14:53:15 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1726487595614, current=UP, previous=STARTING]
2024-09-16 14:53:15 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-16 14:53:15 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8183"]
2024-09-16 14:53:15 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8183 (http) with context path '/payments'
2024-09-16 14:53:15 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8183
2024-09-16 14:53:15 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-16 14:53:15 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-dlt-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-dlt
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 14:53:15 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 14:53:15 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 14:53:15 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726487595700
2024-09-16 14:53:15 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Subscribed to topic(s): order-topic-dlt
2024-09-16 14:53:15 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-3000-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-3000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 14:53:15 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 14:53:15 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 14:53:15 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726487595708
2024-09-16 14:53:15 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Subscribed to topic(s): order-topic-retry-3000
2024-09-16 14:53:15 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-6000-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-6000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 14:53:15 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 14:53:15 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 14:53:15 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726487595714
2024-09-16 14:53:15 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Subscribed to topic(s): order-topic-retry-6000
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-16 14:53:15 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-16 14:53:15 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 14:53:15 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 14:53:15 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726487595718
2024-09-16 14:53:15 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Subscribed to topic(s): order-topic
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-6000-3-82f2a0ba-5458-49e0-bffb-4a9f29ae47e5
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-4-a7ee09fb-be72-4be3-8dda-a98114dc6d19
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-dlt-1-a69a064f-a48c-411a-9371-d09f2da21bff
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-3000-2-9a97b206-3c6b-448c-8d65-32da5721a01f
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully joined group with generation Generation{generationId=21, memberId='consumer-payment-service-retry-3000-2-9a97b206-3c6b-448c-8d65-32da5721a01f', protocol='range'}
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully joined group with generation Generation{generationId=21, memberId='consumer-payment-service-dlt-1-a69a064f-a48c-411a-9371-d09f2da21bff', protocol='range'}
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully joined group with generation Generation{generationId=21, memberId='consumer-payment-service-retry-6000-3-82f2a0ba-5458-49e0-bffb-4a9f29ae47e5', protocol='range'}
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully joined group with generation Generation{generationId=21, memberId='consumer-payment-service-4-a7ee09fb-be72-4be3-8dda-a98114dc6d19', protocol='range'}
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Finished assignment for group at generation 21: {consumer-payment-service-retry-6000-3-82f2a0ba-5458-49e0-bffb-4a9f29ae47e5=Assignment(partitions=[order-topic-retry-6000-0])}
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Finished assignment for group at generation 21: {consumer-payment-service-4-a7ee09fb-be72-4be3-8dda-a98114dc6d19=Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])}
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Finished assignment for group at generation 21: {consumer-payment-service-dlt-1-a69a064f-a48c-411a-9371-d09f2da21bff=Assignment(partitions=[order-topic-dlt-0])}
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Finished assignment for group at generation 21: {consumer-payment-service-retry-3000-2-9a97b206-3c6b-448c-8d65-32da5721a01f=Assignment(partitions=[order-topic-retry-3000-0])}
2024-09-16 14:53:15 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Started PaymentServiceApplication in 3.449 seconds (process running for 3.658)
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully synced group in generation Generation{generationId=21, memberId='consumer-payment-service-4-a7ee09fb-be72-4be3-8dda-a98114dc6d19', protocol='range'}
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully synced group in generation Generation{generationId=21, memberId='consumer-payment-service-retry-3000-2-9a97b206-3c6b-448c-8d65-32da5721a01f', protocol='range'}
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Notifying assignor about the new Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-3000-0])
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Adding newly assigned partitions: order-topic-0, order-topic-1, order-topic-2
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Adding newly assigned partitions: order-topic-retry-3000-0
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully synced group in generation Generation{generationId=21, memberId='consumer-payment-service-dlt-1-a69a064f-a48c-411a-9371-d09f2da21bff', protocol='range'}
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully synced group in generation Generation{generationId=21, memberId='consumer-payment-service-retry-6000-3-82f2a0ba-5458-49e0-bffb-4a9f29ae47e5', protocol='range'}
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Notifying assignor about the new Assignment(partitions=[order-topic-dlt-0])
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-6000-0])
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Adding newly assigned partitions: order-topic-dlt-0
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Adding newly assigned partitions: order-topic-retry-6000-0
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Setting offset for partition order-topic-dlt-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Setting offset for partition order-topic-retry-6000-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Setting offset for partition order-topic-retry-3000-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-2 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-1 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions assigned: [order-topic-dlt-0]
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions assigned: [order-topic-retry-3000-0]
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions assigned: [order-topic-0, order-topic-1, order-topic-2]
2024-09-16 14:53:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions assigned: [order-topic-retry-6000-0]
2024-09-16 14:54:53 [http-nio-8183-exec-2] INFO  o.a.c.c.C.[.[localhost].[/payments] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-16 14:54:53 [http-nio-8183-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-16 14:54:53 [http-nio-8183-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-09-16 14:54:53 [http-nio-8183-exec-2] INFO  c.e.p.controller.PaymentController - Hello World test message.
2024-09-16 14:55:55 [http-nio-8183-exec-5] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8182/api/v1/helloWorld": Connection refused]
2024-09-16 14:56:12 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application PAYMENT-SERVICE with eureka with status DOWN
2024-09-16 14:56:12 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1726487772642, current=DOWN, previous=UP]
2024-09-16 14:56:12 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Revoke previously assigned partitions order-topic-dlt-0
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Revoke previously assigned partitions order-topic-0, order-topic-1, order-topic-2
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Revoke previously assigned partitions order-topic-retry-3000-0
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Revoke previously assigned partitions order-topic-retry-6000-0
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions revoked: [order-topic-retry-3000-0]
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions revoked: [order-topic-dlt-0]
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions revoked: [order-topic-0, order-topic-1, order-topic-2]
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions revoked: [order-topic-retry-6000-0]
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Member consumer-payment-service-retry-3000-2-9a97b206-3c6b-448c-8d65-32da5721a01f sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Member consumer-payment-service-dlt-1-a69a064f-a48c-411a-9371-d09f2da21bff sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Member consumer-payment-service-4-a7ee09fb-be72-4be3-8dda-a98114dc6d19 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Member consumer-payment-service-retry-6000-3-82f2a0ba-5458-49e0-bffb-4a9f29ae47e5 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 14:56:12 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-3000-2 unregistered
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-dlt-1 unregistered
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: Consumer stopped
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: Consumer stopped
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-6000-3 unregistered
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: Consumer stopped
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-4 unregistered
2024-09-16 14:56:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: Consumer stopped
2024-09-16 14:56:12 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-16 14:56:12 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-16 14:56:12 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-16 14:56:12 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2024-09-16 14:56:15 [DiscoveryClient-0] WARN  c.n.discovery.TimedSupervisorTask - task supervisor shutting down, can't accept the task
2024-09-16 14:56:15 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2024-09-16 14:56:15 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - deregister  status: 200
2024-09-16 14:56:15 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2024-09-16 14:56:24 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-09-16 14:56:24 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Starting PaymentServiceApplication using Java 17.0.11 with PID 339506 (/home/kacha/Project/e-commerce/paymentservice/target/classes started by kacha in /home/kacha/Project/e-commerce/paymentservice)
2024-09-16 14:56:24 [restartedMain] INFO  c.e.p.PaymentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2024-09-16 14:56:24 [restartedMain] INFO  o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in /home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar referenced one or more files that do not exist: file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-api-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/txw2-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/istack-commons-runtime-3.0.7.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/stax-ex-1.8.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/FastInfoset-1.2.15.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/javax.activation-api-1.2.0.jar
2024-09-16 14:56:24 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-09-16 14:56:24 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-09-16 14:56:24 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-16 14:56:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 67 ms. Found 1 JPA repository interface.
2024-09-16 14:56:25 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=bb937d62-efc6-3637-95ac-76e931403e2b
2024-09-16 14:56:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-16 14:56:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:56:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:56:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:56:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:56:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$712/0x000076f7ec4e4800] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:56:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:56:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:56:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:56:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:56:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:56:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:56:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:56:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:56:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:56:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:56:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:56:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:56:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:56:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:56:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-16 14:56:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:56:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:56:25 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8183 (http)
2024-09-16 14:56:25 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8183"]
2024-09-16 14:56:25 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-16 14:56:25 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-09-16 14:56:25 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/payments] - Initializing Spring embedded WebApplicationContext
2024-09-16 14:56:25 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1020 ms
2024-09-16 14:56:25 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-16 14:56:25 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-16 14:56:25 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-16 14:56:25 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-16 14:56:25 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-16 14:56:25 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@63004ec6
2024-09-16 14:56:25 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-16 14:56:26 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JTA platform [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
2024-09-16 14:56:26 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-16 14:56:26 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-16 14:56:27 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2024-09-16 14:56:27 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-16 14:56:27 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-16 14:56:27 [restartedMain] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-09-16 14:56:27 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 14:56:27 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 14:56:27 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726487787280
2024-09-16 14:56:27 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2024-09-16 14:56:27 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 14:56:27 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 14:56:27 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 14:56:27 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2024-09-16 14:56:27 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2024-09-16 14:56:27 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 14:56:27 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2024-09-16 14:56:27 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2024-09-16 14:56:27 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2024-09-16 14:56:27 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2024-09-16 14:56:27 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2024-09-16 14:56:27 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2024-09-16 14:56:27 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2024-09-16 14:56:27 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2024-09-16 14:56:27 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2024-09-16 14:56:27 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-09-16 14:56:27 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1726487787606 with initial instances count: 1
2024-09-16 14:56:27 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application PAYMENT-SERVICE with eureka with status UP
2024-09-16 14:56:27 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1726487787608, current=UP, previous=STARTING]
2024-09-16 14:56:27 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-16 14:56:27 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8183"]
2024-09-16 14:56:27 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8183 (http) with context path '/payments'
2024-09-16 14:56:27 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8183
2024-09-16 14:56:27 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-16 14:56:27 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-dlt-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-dlt
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 14:56:27 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 14:56:27 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 14:56:27 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726487787801
2024-09-16 14:56:27 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Subscribed to topic(s): order-topic-dlt
2024-09-16 14:56:27 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-3000-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-3000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 14:56:27 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 14:56:27 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 14:56:27 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726487787808
2024-09-16 14:56:27 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Subscribed to topic(s): order-topic-retry-3000
2024-09-16 14:56:27 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-6000-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-6000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 14:56:27 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 14:56:27 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 14:56:27 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726487787811
2024-09-16 14:56:27 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Subscribed to topic(s): order-topic-retry-6000
2024-09-16 14:56:27 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-16 14:56:27 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-16 14:56:27 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 14:56:27 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726487787814
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 14:56:27 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Subscribed to topic(s): order-topic
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-4-69e59f6f-20fe-45ce-b5c1-7f63abc01308
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-dlt-1-f9a71706-ce7e-4dc2-bf6c-1ff303592d1a
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-3000-2-4a79a0f0-2a8b-44d3-8ddf-c97fc132ab04
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-6000-3-610073be-8aa4-453f-8c06-bce6712ba9e2
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully joined group with generation Generation{generationId=23, memberId='consumer-payment-service-dlt-1-f9a71706-ce7e-4dc2-bf6c-1ff303592d1a', protocol='range'}
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully joined group with generation Generation{generationId=23, memberId='consumer-payment-service-4-69e59f6f-20fe-45ce-b5c1-7f63abc01308', protocol='range'}
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully joined group with generation Generation{generationId=23, memberId='consumer-payment-service-retry-3000-2-4a79a0f0-2a8b-44d3-8ddf-c97fc132ab04', protocol='range'}
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully joined group with generation Generation{generationId=23, memberId='consumer-payment-service-retry-6000-3-610073be-8aa4-453f-8c06-bce6712ba9e2', protocol='range'}
2024-09-16 14:56:27 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Started PaymentServiceApplication in 3.621 seconds (process running for 3.837)
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Finished assignment for group at generation 23: {consumer-payment-service-4-69e59f6f-20fe-45ce-b5c1-7f63abc01308=Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])}
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Finished assignment for group at generation 23: {consumer-payment-service-dlt-1-f9a71706-ce7e-4dc2-bf6c-1ff303592d1a=Assignment(partitions=[order-topic-dlt-0])}
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Finished assignment for group at generation 23: {consumer-payment-service-retry-3000-2-4a79a0f0-2a8b-44d3-8ddf-c97fc132ab04=Assignment(partitions=[order-topic-retry-3000-0])}
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Finished assignment for group at generation 23: {consumer-payment-service-retry-6000-3-610073be-8aa4-453f-8c06-bce6712ba9e2=Assignment(partitions=[order-topic-retry-6000-0])}
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully synced group in generation Generation{generationId=23, memberId='consumer-payment-service-4-69e59f6f-20fe-45ce-b5c1-7f63abc01308', protocol='range'}
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully synced group in generation Generation{generationId=23, memberId='consumer-payment-service-dlt-1-f9a71706-ce7e-4dc2-bf6c-1ff303592d1a', protocol='range'}
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully synced group in generation Generation{generationId=23, memberId='consumer-payment-service-retry-6000-3-610073be-8aa4-453f-8c06-bce6712ba9e2', protocol='range'}
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully synced group in generation Generation{generationId=23, memberId='consumer-payment-service-retry-3000-2-4a79a0f0-2a8b-44d3-8ddf-c97fc132ab04', protocol='range'}
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Notifying assignor about the new Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Notifying assignor about the new Assignment(partitions=[order-topic-dlt-0])
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-3000-0])
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-6000-0])
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Adding newly assigned partitions: order-topic-retry-3000-0
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Adding newly assigned partitions: order-topic-0, order-topic-1, order-topic-2
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Adding newly assigned partitions: order-topic-dlt-0
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Adding newly assigned partitions: order-topic-retry-6000-0
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Setting offset for partition order-topic-retry-6000-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Setting offset for partition order-topic-dlt-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-2 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Setting offset for partition order-topic-retry-3000-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-1 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions assigned: [order-topic-retry-6000-0]
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions assigned: [order-topic-retry-3000-0]
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions assigned: [order-topic-dlt-0]
2024-09-16 14:56:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions assigned: [order-topic-0, order-topic-1, order-topic-2]
2024-09-16 14:56:47 [http-nio-8183-exec-2] INFO  o.a.c.c.C.[.[localhost].[/payments] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-16 14:56:47 [http-nio-8183-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-16 14:56:47 [http-nio-8183-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-09-16 14:56:47 [http-nio-8183-exec-2] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.client.HttpClientErrorException$NotFound: 404 : "<!doctype html><html lang="en"><head><title>HTTP Status 404 – Not Found</title><style type="text/css">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-size:22px;} h2 {font-size:16px;} h3 {font-size:14px;} p {font-size:12px;} a {color:black;} .line {height:1px;background-color:#525D76;border:none;}</style></head><body><h1>HTTP Status 404 – Not Found</h1><hr class="line" /><p><b>Type</b> Status Report</p><p><b>Description</b> The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.</p><hr class="line" /><h3>Apache Tomcat/10.1.25</h3></body></html>"]
2024-09-16 14:58:35 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application PAYMENT-SERVICE with eureka with status DOWN
2024-09-16 14:58:35 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1726487915754, current=DOWN, previous=UP]
2024-09-16 14:58:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Revoke previously assigned partitions order-topic-dlt-0
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Revoke previously assigned partitions order-topic-retry-3000-0
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Revoke previously assigned partitions order-topic-retry-6000-0
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Revoke previously assigned partitions order-topic-0, order-topic-1, order-topic-2
2024-09-16 14:58:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions revoked: [order-topic-retry-6000-0]
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions revoked: [order-topic-dlt-0]
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions revoked: [order-topic-0, order-topic-1, order-topic-2]
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions revoked: [order-topic-retry-3000-0]
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Member consumer-payment-service-dlt-1-f9a71706-ce7e-4dc2-bf6c-1ff303592d1a sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Member consumer-payment-service-retry-6000-3-610073be-8aa4-453f-8c06-bce6712ba9e2 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Member consumer-payment-service-4-69e59f6f-20fe-45ce-b5c1-7f63abc01308 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Member consumer-payment-service-retry-3000-2-4a79a0f0-2a8b-44d3-8ddf-c97fc132ab04 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 14:58:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 14:58:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 14:58:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 14:58:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 14:58:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 14:58:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 14:58:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 14:58:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 14:58:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 14:58:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-6000-3 unregistered
2024-09-16 14:58:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 14:58:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 14:58:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 14:58:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: Consumer stopped
2024-09-16 14:58:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-3000-2 unregistered
2024-09-16 14:58:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: Consumer stopped
2024-09-16 14:58:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-4 unregistered
2024-09-16 14:58:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: Consumer stopped
2024-09-16 14:58:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-dlt-1 unregistered
2024-09-16 14:58:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: Consumer stopped
2024-09-16 14:58:36 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-16 14:58:36 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-16 14:58:36 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-16 14:58:36 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2024-09-16 14:58:39 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2024-09-16 14:58:39 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - deregister  status: 200
2024-09-16 14:58:39 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2024-09-16 14:58:47 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-09-16 14:58:47 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Starting PaymentServiceApplication using Java 17.0.11 with PID 339861 (/home/kacha/Project/e-commerce/paymentservice/target/classes started by kacha in /home/kacha/Project/e-commerce/paymentservice)
2024-09-16 14:58:47 [restartedMain] INFO  c.e.p.PaymentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2024-09-16 14:58:47 [restartedMain] INFO  o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in /home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar referenced one or more files that do not exist: file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-api-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/txw2-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/istack-commons-runtime-3.0.7.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/stax-ex-1.8.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/FastInfoset-1.2.15.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/javax.activation-api-1.2.0.jar
2024-09-16 14:58:47 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-09-16 14:58:47 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-09-16 14:58:48 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-16 14:58:48 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 55 ms. Found 1 JPA repository interface.
2024-09-16 14:58:48 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=bb937d62-efc6-3637-95ac-76e931403e2b
2024-09-16 14:58:48 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-16 14:58:48 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:58:48 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:58:48 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:58:48 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:58:48 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$712/0x00007a4b004cc800] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:58:48 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:58:48 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:58:48 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:58:48 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:58:48 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:58:48 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:58:48 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:58:48 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:58:48 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:58:48 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:58:48 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:58:48 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:58:48 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:58:48 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:58:48 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-16 14:58:48 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:58:48 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 14:58:48 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8183 (http)
2024-09-16 14:58:48 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8183"]
2024-09-16 14:58:48 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-16 14:58:48 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-09-16 14:58:48 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/payments] - Initializing Spring embedded WebApplicationContext
2024-09-16 14:58:48 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1001 ms
2024-09-16 14:58:48 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-16 14:58:48 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-16 14:58:48 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-16 14:58:48 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-16 14:58:48 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-16 14:58:48 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@63004ec6
2024-09-16 14:58:48 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-16 14:58:49 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JTA platform [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
2024-09-16 14:58:49 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-16 14:58:49 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-16 14:58:50 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2024-09-16 14:58:50 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-16 14:58:50 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-16 14:58:50 [restartedMain] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-09-16 14:58:50 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 14:58:50 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 14:58:50 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726487930236
2024-09-16 14:58:50 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2024-09-16 14:58:50 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 14:58:50 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 14:58:50 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 14:58:50 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2024-09-16 14:58:50 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2024-09-16 14:58:50 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 14:58:50 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2024-09-16 14:58:50 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2024-09-16 14:58:50 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2024-09-16 14:58:50 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2024-09-16 14:58:50 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2024-09-16 14:58:50 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2024-09-16 14:58:50 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2024-09-16 14:58:50 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2024-09-16 14:58:50 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2024-09-16 14:58:50 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-09-16 14:58:50 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1726487930564 with initial instances count: 1
2024-09-16 14:58:50 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application PAYMENT-SERVICE with eureka with status UP
2024-09-16 14:58:50 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1726487930567, current=UP, previous=STARTING]
2024-09-16 14:58:50 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-16 14:58:50 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8183"]
2024-09-16 14:58:50 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8183 (http) with context path '/payments'
2024-09-16 14:58:50 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8183
2024-09-16 14:58:50 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-16 14:58:50 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-dlt-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-dlt
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 14:58:50 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 14:58:50 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 14:58:50 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726487930758
2024-09-16 14:58:50 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Subscribed to topic(s): order-topic-dlt
2024-09-16 14:58:50 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-3000-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-3000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 14:58:50 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 14:58:50 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 14:58:50 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726487930766
2024-09-16 14:58:50 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Subscribed to topic(s): order-topic-retry-3000
2024-09-16 14:58:50 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-6000-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-6000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 14:58:50 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 14:58:50 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 14:58:50 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726487930769
2024-09-16 14:58:50 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Subscribed to topic(s): order-topic-retry-6000
2024-09-16 14:58:50 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 14:58:50 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 14:58:50 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 14:58:50 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726487930772
2024-09-16 14:58:50 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Subscribed to topic(s): order-topic
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-16 14:58:50 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Started PaymentServiceApplication in 3.444 seconds (process running for 3.641)
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-6000-3-4a916e91-ad02-4bd0-8947-549bc804014d
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-3000-2-31b66df7-3591-49e9-8f28-53aca50541d9
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-dlt-1-17a65d62-2add-4535-97f8-080a2904414d
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-4-64643715-dedc-40b7-b9ce-74d49d8bdd66
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully joined group with generation Generation{generationId=25, memberId='consumer-payment-service-4-64643715-dedc-40b7-b9ce-74d49d8bdd66', protocol='range'}
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully joined group with generation Generation{generationId=25, memberId='consumer-payment-service-retry-3000-2-31b66df7-3591-49e9-8f28-53aca50541d9', protocol='range'}
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully joined group with generation Generation{generationId=25, memberId='consumer-payment-service-retry-6000-3-4a916e91-ad02-4bd0-8947-549bc804014d', protocol='range'}
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully joined group with generation Generation{generationId=25, memberId='consumer-payment-service-dlt-1-17a65d62-2add-4535-97f8-080a2904414d', protocol='range'}
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Finished assignment for group at generation 25: {consumer-payment-service-retry-6000-3-4a916e91-ad02-4bd0-8947-549bc804014d=Assignment(partitions=[order-topic-retry-6000-0])}
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Finished assignment for group at generation 25: {consumer-payment-service-retry-3000-2-31b66df7-3591-49e9-8f28-53aca50541d9=Assignment(partitions=[order-topic-retry-3000-0])}
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Finished assignment for group at generation 25: {consumer-payment-service-dlt-1-17a65d62-2add-4535-97f8-080a2904414d=Assignment(partitions=[order-topic-dlt-0])}
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Finished assignment for group at generation 25: {consumer-payment-service-4-64643715-dedc-40b7-b9ce-74d49d8bdd66=Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])}
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully synced group in generation Generation{generationId=25, memberId='consumer-payment-service-retry-3000-2-31b66df7-3591-49e9-8f28-53aca50541d9', protocol='range'}
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully synced group in generation Generation{generationId=25, memberId='consumer-payment-service-retry-6000-3-4a916e91-ad02-4bd0-8947-549bc804014d', protocol='range'}
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully synced group in generation Generation{generationId=25, memberId='consumer-payment-service-dlt-1-17a65d62-2add-4535-97f8-080a2904414d', protocol='range'}
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-6000-0])
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-3000-0])
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Notifying assignor about the new Assignment(partitions=[order-topic-dlt-0])
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Adding newly assigned partitions: order-topic-retry-6000-0
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Adding newly assigned partitions: order-topic-retry-3000-0
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Adding newly assigned partitions: order-topic-dlt-0
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Setting offset for partition order-topic-retry-6000-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Setting offset for partition order-topic-dlt-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Setting offset for partition order-topic-retry-3000-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions assigned: [order-topic-retry-6000-0]
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions assigned: [order-topic-retry-3000-0]
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions assigned: [order-topic-dlt-0]
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully synced group in generation Generation{generationId=25, memberId='consumer-payment-service-4-64643715-dedc-40b7-b9ce-74d49d8bdd66', protocol='range'}
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Notifying assignor about the new Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Adding newly assigned partitions: order-topic-0, order-topic-1, order-topic-2
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-2 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-1 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 14:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions assigned: [order-topic-0, order-topic-1, order-topic-2]
2024-09-16 15:03:50 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 15:07:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-16 15:07:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-16 15:07:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-16 15:07:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-16 15:08:50 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 15:12:27 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application PAYMENT-SERVICE with eureka with status DOWN
2024-09-16 15:12:27 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1726488747207, current=DOWN, previous=UP]
2024-09-16 15:12:27 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Revoke previously assigned partitions order-topic-retry-3000-0
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Revoke previously assigned partitions order-topic-retry-6000-0
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Revoke previously assigned partitions order-topic-dlt-0
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Revoke previously assigned partitions order-topic-0, order-topic-1, order-topic-2
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions revoked: [order-topic-retry-3000-0]
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions revoked: [order-topic-retry-6000-0]
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions revoked: [order-topic-0, order-topic-1, order-topic-2]
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Member consumer-payment-service-retry-3000-2-31b66df7-3591-49e9-8f28-53aca50541d9 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Member consumer-payment-service-4-64643715-dedc-40b7-b9ce-74d49d8bdd66 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions revoked: [order-topic-dlt-0]
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Member consumer-payment-service-retry-6000-3-4a916e91-ad02-4bd0-8947-549bc804014d sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Member consumer-payment-service-dlt-1-17a65d62-2add-4535-97f8-080a2904414d sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 15:12:27 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-6000-3 unregistered
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-3000-2 unregistered
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-4 unregistered
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: Consumer stopped
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: Consumer stopped
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: Consumer stopped
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-dlt-1 unregistered
2024-09-16 15:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: Consumer stopped
2024-09-16 15:12:27 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-16 15:12:27 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-16 15:12:27 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-16 15:12:27 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2024-09-16 15:12:30 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2024-09-16 15:12:30 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - deregister  status: 200
2024-09-16 15:12:30 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2024-09-16 15:12:38 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-09-16 15:12:38 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Starting PaymentServiceApplication using Java 17.0.11 with PID 340957 (/home/kacha/Project/e-commerce/paymentservice/target/classes started by kacha in /home/kacha/Project/e-commerce/paymentservice)
2024-09-16 15:12:38 [restartedMain] INFO  c.e.p.PaymentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2024-09-16 15:12:38 [restartedMain] INFO  o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in /home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar referenced one or more files that do not exist: file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-api-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/txw2-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/istack-commons-runtime-3.0.7.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/stax-ex-1.8.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/FastInfoset-1.2.15.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/javax.activation-api-1.2.0.jar
2024-09-16 15:12:38 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-09-16 15:12:38 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-09-16 15:12:39 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-16 15:12:39 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56 ms. Found 1 JPA repository interface.
2024-09-16 15:12:39 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=bb937d62-efc6-3637-95ac-76e931403e2b
2024-09-16 15:12:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-16 15:12:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:12:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:12:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:12:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:12:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$712/0x00007173484e6870] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:12:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:12:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:12:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:12:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:12:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:12:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:12:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:12:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:12:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:12:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:12:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:12:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:12:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:12:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:12:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-16 15:12:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:12:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:12:39 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8183 (http)
2024-09-16 15:12:39 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8183"]
2024-09-16 15:12:39 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-16 15:12:39 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-09-16 15:12:39 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/payments] - Initializing Spring embedded WebApplicationContext
2024-09-16 15:12:39 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 964 ms
2024-09-16 15:12:39 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-16 15:12:39 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-16 15:12:39 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-16 15:12:40 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-16 15:12:40 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-16 15:12:40 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@63004ec6
2024-09-16 15:12:40 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-16 15:12:40 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JTA platform [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
2024-09-16 15:12:40 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-16 15:12:40 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-16 15:12:41 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2024-09-16 15:12:41 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-16 15:12:41 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-16 15:12:41 [restartedMain] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-09-16 15:12:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 15:12:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 15:12:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726488761327
2024-09-16 15:12:41 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2024-09-16 15:12:41 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 15:12:41 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 15:12:41 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 15:12:41 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2024-09-16 15:12:41 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2024-09-16 15:12:41 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 15:12:41 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2024-09-16 15:12:41 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2024-09-16 15:12:41 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2024-09-16 15:12:41 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2024-09-16 15:12:41 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2024-09-16 15:12:41 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2024-09-16 15:12:41 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2024-09-16 15:12:41 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2024-09-16 15:12:41 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2024-09-16 15:12:41 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-09-16 15:12:41 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1726488761646 with initial instances count: 1
2024-09-16 15:12:41 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application PAYMENT-SERVICE with eureka with status UP
2024-09-16 15:12:41 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1726488761649, current=UP, previous=STARTING]
2024-09-16 15:12:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-16 15:12:41 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8183"]
2024-09-16 15:12:41 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8183 (http) with context path '/payments'
2024-09-16 15:12:41 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8183
2024-09-16 15:12:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-16 15:12:41 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-dlt-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-dlt
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 15:12:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 15:12:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 15:12:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726488761710
2024-09-16 15:12:41 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Subscribed to topic(s): order-topic-dlt
2024-09-16 15:12:41 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-3000-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-3000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 15:12:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 15:12:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 15:12:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726488761719
2024-09-16 15:12:41 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Subscribed to topic(s): order-topic-retry-3000
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 15:12:41 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-6000-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-6000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 15:12:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 15:12:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 15:12:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726488761724
2024-09-16 15:12:41 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Subscribed to topic(s): order-topic-retry-6000
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-16 15:12:41 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-16 15:12:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 15:12:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 15:12:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726488761729
2024-09-16 15:12:41 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Subscribed to topic(s): order-topic
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-6000-3-00840cd0-6ab3-45ca-ad08-fbe72b6ae61f
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-3000-2-0dff7bd3-fe8c-42e8-bf94-d52dc010280f
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-dlt-1-5ea0562b-46a7-4d18-8943-5c566def6d3a
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully joined group with generation Generation{generationId=27, memberId='consumer-payment-service-retry-6000-3-00840cd0-6ab3-45ca-ad08-fbe72b6ae61f', protocol='range'}
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully joined group with generation Generation{generationId=27, memberId='consumer-payment-service-dlt-1-5ea0562b-46a7-4d18-8943-5c566def6d3a', protocol='range'}
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully joined group with generation Generation{generationId=27, memberId='consumer-payment-service-retry-3000-2-0dff7bd3-fe8c-42e8-bf94-d52dc010280f', protocol='range'}
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-4-d379f0f0-7428-4685-b3f5-469abe444a56
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Finished assignment for group at generation 27: {consumer-payment-service-retry-3000-2-0dff7bd3-fe8c-42e8-bf94-d52dc010280f=Assignment(partitions=[order-topic-retry-3000-0])}
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Finished assignment for group at generation 27: {consumer-payment-service-retry-6000-3-00840cd0-6ab3-45ca-ad08-fbe72b6ae61f=Assignment(partitions=[order-topic-retry-6000-0])}
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Finished assignment for group at generation 27: {consumer-payment-service-dlt-1-5ea0562b-46a7-4d18-8943-5c566def6d3a=Assignment(partitions=[order-topic-dlt-0])}
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully joined group with generation Generation{generationId=27, memberId='consumer-payment-service-4-d379f0f0-7428-4685-b3f5-469abe444a56', protocol='range'}
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Finished assignment for group at generation 27: {consumer-payment-service-4-d379f0f0-7428-4685-b3f5-469abe444a56=Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])}
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully synced group in generation Generation{generationId=27, memberId='consumer-payment-service-retry-3000-2-0dff7bd3-fe8c-42e8-bf94-d52dc010280f', protocol='range'}
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully synced group in generation Generation{generationId=27, memberId='consumer-payment-service-dlt-1-5ea0562b-46a7-4d18-8943-5c566def6d3a', protocol='range'}
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully synced group in generation Generation{generationId=27, memberId='consumer-payment-service-4-d379f0f0-7428-4685-b3f5-469abe444a56', protocol='range'}
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-3000-0])
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Notifying assignor about the new Assignment(partitions=[order-topic-dlt-0])
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Notifying assignor about the new Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully synced group in generation Generation{generationId=27, memberId='consumer-payment-service-retry-6000-3-00840cd0-6ab3-45ca-ad08-fbe72b6ae61f', protocol='range'}
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-6000-0])
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Adding newly assigned partitions: order-topic-retry-6000-0
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Adding newly assigned partitions: order-topic-dlt-0
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Adding newly assigned partitions: order-topic-0, order-topic-1, order-topic-2
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Adding newly assigned partitions: order-topic-retry-3000-0
2024-09-16 15:12:41 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Started PaymentServiceApplication in 3.301 seconds (process running for 3.501)
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Setting offset for partition order-topic-dlt-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Setting offset for partition order-topic-retry-3000-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Setting offset for partition order-topic-retry-6000-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-2 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-1 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions assigned: [order-topic-dlt-0]
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions assigned: [order-topic-retry-6000-0]
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions assigned: [order-topic-0, order-topic-1, order-topic-2]
2024-09-16 15:12:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions assigned: [order-topic-retry-3000-0]
2024-09-16 15:15:49 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application PAYMENT-SERVICE with eureka with status DOWN
2024-09-16 15:15:49 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1726488949385, current=DOWN, previous=UP]
2024-09-16 15:15:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Revoke previously assigned partitions order-topic-dlt-0
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Revoke previously assigned partitions order-topic-retry-3000-0
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Revoke previously assigned partitions order-topic-retry-6000-0
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Revoke previously assigned partitions order-topic-0, order-topic-1, order-topic-2
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions revoked: [order-topic-dlt-0]
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions revoked: [order-topic-retry-3000-0]
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions revoked: [order-topic-retry-6000-0]
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions revoked: [order-topic-0, order-topic-1, order-topic-2]
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Member consumer-payment-service-dlt-1-5ea0562b-46a7-4d18-8943-5c566def6d3a sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Member consumer-payment-service-retry-3000-2-0dff7bd3-fe8c-42e8-bf94-d52dc010280f sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Member consumer-payment-service-4-d379f0f0-7428-4685-b3f5-469abe444a56 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Member consumer-payment-service-retry-6000-3-00840cd0-6ab3-45ca-ad08-fbe72b6ae61f sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 15:15:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-6000-3 unregistered
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-3000-2 unregistered
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: Consumer stopped
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: Consumer stopped
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-dlt-1 unregistered
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: Consumer stopped
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-4 unregistered
2024-09-16 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: Consumer stopped
2024-09-16 15:15:49 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-16 15:15:49 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-16 15:15:49 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-16 15:15:49 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2024-09-16 15:15:52 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2024-09-16 15:15:52 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - deregister  status: 200
2024-09-16 15:15:52 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2024-09-16 15:16:00 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-09-16 15:16:00 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Starting PaymentServiceApplication using Java 17.0.11 with PID 341327 (/home/kacha/Project/e-commerce/paymentservice/target/classes started by kacha in /home/kacha/Project/e-commerce/paymentservice)
2024-09-16 15:16:00 [restartedMain] INFO  c.e.p.PaymentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2024-09-16 15:16:00 [restartedMain] INFO  o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in /home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar referenced one or more files that do not exist: file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-api-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/txw2-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/istack-commons-runtime-3.0.7.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/stax-ex-1.8.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/FastInfoset-1.2.15.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/javax.activation-api-1.2.0.jar
2024-09-16 15:16:00 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-09-16 15:16:00 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-09-16 15:16:01 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-16 15:16:01 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 78 ms. Found 1 JPA repository interface.
2024-09-16 15:16:01 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=bb937d62-efc6-3637-95ac-76e931403e2b
2024-09-16 15:16:01 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-16 15:16:01 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:16:01 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:16:01 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:16:01 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:16:01 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$712/0x00007bbed44e4800] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:16:01 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:16:01 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:16:01 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:16:01 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:16:01 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:16:01 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:16:01 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:16:01 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:16:01 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:16:01 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:16:01 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:16:01 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:16:01 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:16:01 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:16:01 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-16 15:16:01 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:16:01 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:16:01 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8183 (http)
2024-09-16 15:16:01 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8183"]
2024-09-16 15:16:01 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-16 15:16:01 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-09-16 15:16:01 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/payments] - Initializing Spring embedded WebApplicationContext
2024-09-16 15:16:01 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1061 ms
2024-09-16 15:16:01 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-16 15:16:01 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-16 15:16:01 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-16 15:16:02 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-16 15:16:02 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-16 15:16:02 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@22ec8e7b
2024-09-16 15:16:02 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-16 15:16:02 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JTA platform [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
2024-09-16 15:16:02 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-16 15:16:03 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-16 15:16:03 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2024-09-16 15:16:03 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-16 15:16:03 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-16 15:16:03 [restartedMain] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-09-16 15:16:03 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 15:16:03 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 15:16:03 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726488963577
2024-09-16 15:16:03 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2024-09-16 15:16:03 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 15:16:03 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 15:16:03 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 15:16:03 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2024-09-16 15:16:03 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2024-09-16 15:16:03 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 15:16:03 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2024-09-16 15:16:03 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2024-09-16 15:16:03 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2024-09-16 15:16:03 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2024-09-16 15:16:03 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2024-09-16 15:16:03 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2024-09-16 15:16:03 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2024-09-16 15:16:03 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2024-09-16 15:16:03 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2024-09-16 15:16:03 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-09-16 15:16:03 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1726488963886 with initial instances count: 0
2024-09-16 15:16:03 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application PAYMENT-SERVICE with eureka with status UP
2024-09-16 15:16:03 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1726488963888, current=UP, previous=STARTING]
2024-09-16 15:16:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-16 15:16:03 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8183"]
2024-09-16 15:16:03 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8183 (http) with context path '/payments'
2024-09-16 15:16:03 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8183
2024-09-16 15:16:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-16 15:16:04 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-dlt-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-dlt
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 15:16:04 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 15:16:04 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 15:16:04 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726488964098
2024-09-16 15:16:04 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Subscribed to topic(s): order-topic-dlt
2024-09-16 15:16:04 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-3000-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-3000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 15:16:04 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 15:16:04 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 15:16:04 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726488964108
2024-09-16 15:16:04 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Subscribed to topic(s): order-topic-retry-3000
2024-09-16 15:16:04 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-6000-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-6000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 15:16:04 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 15:16:04 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 15:16:04 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726488964111
2024-09-16 15:16:04 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Subscribed to topic(s): order-topic-retry-6000
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-16 15:16:04 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 15:16:04 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 15:16:04 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 15:16:04 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726488964114
2024-09-16 15:16:04 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Subscribed to topic(s): order-topic
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-4-afb8b0dd-b38f-448a-88f8-99fab4865426
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-3000-2-0c97732b-836a-4be1-991c-a59f3da83025
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-6000-3-e41df5af-d8a2-4d6f-9992-48de264a0463
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-dlt-1-f43b4d35-5500-451d-b223-da52c17734a6
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully joined group with generation Generation{generationId=29, memberId='consumer-payment-service-4-afb8b0dd-b38f-448a-88f8-99fab4865426', protocol='range'}
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully joined group with generation Generation{generationId=29, memberId='consumer-payment-service-retry-3000-2-0c97732b-836a-4be1-991c-a59f3da83025', protocol='range'}
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully joined group with generation Generation{generationId=29, memberId='consumer-payment-service-retry-6000-3-e41df5af-d8a2-4d6f-9992-48de264a0463', protocol='range'}
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully joined group with generation Generation{generationId=29, memberId='consumer-payment-service-dlt-1-f43b4d35-5500-451d-b223-da52c17734a6', protocol='range'}
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Finished assignment for group at generation 29: {consumer-payment-service-retry-6000-3-e41df5af-d8a2-4d6f-9992-48de264a0463=Assignment(partitions=[order-topic-retry-6000-0])}
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Finished assignment for group at generation 29: {consumer-payment-service-retry-3000-2-0c97732b-836a-4be1-991c-a59f3da83025=Assignment(partitions=[order-topic-retry-3000-0])}
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Finished assignment for group at generation 29: {consumer-payment-service-4-afb8b0dd-b38f-448a-88f8-99fab4865426=Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])}
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Finished assignment for group at generation 29: {consumer-payment-service-dlt-1-f43b4d35-5500-451d-b223-da52c17734a6=Assignment(partitions=[order-topic-dlt-0])}
2024-09-16 15:16:04 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Started PaymentServiceApplication in 3.658 seconds (process running for 3.88)
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully synced group in generation Generation{generationId=29, memberId='consumer-payment-service-4-afb8b0dd-b38f-448a-88f8-99fab4865426', protocol='range'}
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully synced group in generation Generation{generationId=29, memberId='consumer-payment-service-dlt-1-f43b4d35-5500-451d-b223-da52c17734a6', protocol='range'}
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully synced group in generation Generation{generationId=29, memberId='consumer-payment-service-retry-3000-2-0c97732b-836a-4be1-991c-a59f3da83025', protocol='range'}
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully synced group in generation Generation{generationId=29, memberId='consumer-payment-service-retry-6000-3-e41df5af-d8a2-4d6f-9992-48de264a0463', protocol='range'}
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Notifying assignor about the new Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-3000-0])
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Notifying assignor about the new Assignment(partitions=[order-topic-dlt-0])
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-6000-0])
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Adding newly assigned partitions: order-topic-0, order-topic-1, order-topic-2
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Adding newly assigned partitions: order-topic-retry-3000-0
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Adding newly assigned partitions: order-topic-dlt-0
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Adding newly assigned partitions: order-topic-retry-6000-0
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-2 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Setting offset for partition order-topic-retry-3000-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Setting offset for partition order-topic-retry-6000-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Setting offset for partition order-topic-dlt-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-1 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions assigned: [order-topic-0, order-topic-1, order-topic-2]
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions assigned: [order-topic-retry-6000-0]
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions assigned: [order-topic-retry-3000-0]
2024-09-16 15:16:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions assigned: [order-topic-dlt-0]
2024-09-16 15:16:33 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2024-09-16 15:16:33 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2024-09-16 15:16:33 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2024-09-16 15:16:33 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2024-09-16 15:16:33 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2024-09-16 15:16:33 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: false
2024-09-16 15:16:33 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2024-09-16 15:16:33 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2024-09-16 15:18:41 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application PAYMENT-SERVICE with eureka with status DOWN
2024-09-16 15:18:41 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1726489121394, current=DOWN, previous=UP]
2024-09-16 15:18:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Revoke previously assigned partitions order-topic-dlt-0
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Revoke previously assigned partitions order-topic-retry-3000-0
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Revoke previously assigned partitions order-topic-retry-6000-0
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Revoke previously assigned partitions order-topic-0, order-topic-1, order-topic-2
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions revoked: [order-topic-retry-3000-0]
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions revoked: [order-topic-0, order-topic-1, order-topic-2]
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions revoked: [order-topic-retry-6000-0]
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions revoked: [order-topic-dlt-0]
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Member consumer-payment-service-retry-3000-2-0c97732b-836a-4be1-991c-a59f3da83025 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Member consumer-payment-service-4-afb8b0dd-b38f-448a-88f8-99fab4865426 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Member consumer-payment-service-retry-6000-3-e41df5af-d8a2-4d6f-9992-48de264a0463 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Member consumer-payment-service-dlt-1-f43b4d35-5500-451d-b223-da52c17734a6 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 15:18:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-4 unregistered
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-3000-2 unregistered
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: Consumer stopped
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: Consumer stopped
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-6000-3 unregistered
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: Consumer stopped
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-dlt-1 unregistered
2024-09-16 15:18:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: Consumer stopped
2024-09-16 15:18:41 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-16 15:18:41 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-16 15:18:41 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-16 15:18:41 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2024-09-16 15:18:44 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2024-09-16 15:18:44 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - deregister  status: 200
2024-09-16 15:18:44 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2024-09-16 15:18:52 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-09-16 15:18:52 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Starting PaymentServiceApplication using Java 17.0.11 with PID 341666 (/home/kacha/Project/e-commerce/paymentservice/target/classes started by kacha in /home/kacha/Project/e-commerce/paymentservice)
2024-09-16 15:18:52 [restartedMain] INFO  c.e.p.PaymentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2024-09-16 15:18:53 [restartedMain] INFO  o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in /home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar referenced one or more files that do not exist: file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-api-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/txw2-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/istack-commons-runtime-3.0.7.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/stax-ex-1.8.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/FastInfoset-1.2.15.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/javax.activation-api-1.2.0.jar
2024-09-16 15:18:53 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-09-16 15:18:53 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-09-16 15:18:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-16 15:18:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59 ms. Found 1 JPA repository interface.
2024-09-16 15:18:53 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=bb937d62-efc6-3637-95ac-76e931403e2b
2024-09-16 15:18:53 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-16 15:18:53 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:18:53 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:18:53 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:18:53 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:18:53 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$712/0x000074628c4e4800] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:18:53 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:18:53 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:18:53 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:18:53 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:18:53 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:18:53 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:18:53 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:18:53 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:18:53 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:18:53 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:18:53 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:18:53 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:18:53 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:18:53 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:18:53 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-16 15:18:53 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:18:53 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:18:53 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8183 (http)
2024-09-16 15:18:53 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8183"]
2024-09-16 15:18:53 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-16 15:18:53 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-09-16 15:18:54 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/payments] - Initializing Spring embedded WebApplicationContext
2024-09-16 15:18:54 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1004 ms
2024-09-16 15:18:54 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-16 15:18:54 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-16 15:18:54 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-16 15:18:54 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-16 15:18:54 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-16 15:18:54 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@452f2c9c
2024-09-16 15:18:54 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-16 15:18:54 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JTA platform [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
2024-09-16 15:18:54 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-16 15:18:55 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-16 15:18:55 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2024-09-16 15:18:55 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-16 15:18:55 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-16 15:18:55 [restartedMain] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-09-16 15:18:55 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 15:18:55 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 15:18:55 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726489135717
2024-09-16 15:18:55 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2024-09-16 15:18:55 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 15:18:55 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 15:18:55 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 15:18:55 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2024-09-16 15:18:55 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2024-09-16 15:18:55 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 15:18:55 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2024-09-16 15:18:55 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2024-09-16 15:18:55 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2024-09-16 15:18:55 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2024-09-16 15:18:55 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2024-09-16 15:18:55 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2024-09-16 15:18:55 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2024-09-16 15:18:56 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2024-09-16 15:18:56 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2024-09-16 15:18:56 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-09-16 15:18:56 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1726489136053 with initial instances count: 0
2024-09-16 15:18:56 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application PAYMENT-SERVICE with eureka with status UP
2024-09-16 15:18:56 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1726489136056, current=UP, previous=STARTING]
2024-09-16 15:18:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-16 15:18:56 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8183"]
2024-09-16 15:18:56 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8183 (http) with context path '/payments'
2024-09-16 15:18:56 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8183
2024-09-16 15:18:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-16 15:18:56 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-dlt-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-dlt
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 15:18:56 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 15:18:56 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 15:18:56 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726489136240
2024-09-16 15:18:56 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Subscribed to topic(s): order-topic-dlt
2024-09-16 15:18:56 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-3000-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-3000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 15:18:56 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 15:18:56 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 15:18:56 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726489136247
2024-09-16 15:18:56 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Subscribed to topic(s): order-topic-retry-3000
2024-09-16 15:18:56 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-6000-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-6000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 15:18:56 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 15:18:56 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 15:18:56 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726489136255
2024-09-16 15:18:56 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Subscribed to topic(s): order-topic-retry-6000
2024-09-16 15:18:56 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 15:18:56 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 15:18:56 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 15:18:56 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726489136263
2024-09-16 15:18:56 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Subscribed to topic(s): order-topic
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-dlt-1-b058a5d2-51da-4ad3-b8bc-0cd7c80a3839
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-3000-2-8b65ea31-87c7-4e3c-8e02-b0a6450fa2d8
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-6000-3-8b6cad58-c706-4330-b458-c3bba84115e7
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-4-e4a5b486-be21-4dcf-ab68-9f837de994c9
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully joined group with generation Generation{generationId=31, memberId='consumer-payment-service-4-e4a5b486-be21-4dcf-ab68-9f837de994c9', protocol='range'}
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully joined group with generation Generation{generationId=31, memberId='consumer-payment-service-retry-6000-3-8b6cad58-c706-4330-b458-c3bba84115e7', protocol='range'}
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully joined group with generation Generation{generationId=31, memberId='consumer-payment-service-retry-3000-2-8b65ea31-87c7-4e3c-8e02-b0a6450fa2d8', protocol='range'}
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully joined group with generation Generation{generationId=31, memberId='consumer-payment-service-dlt-1-b058a5d2-51da-4ad3-b8bc-0cd7c80a3839', protocol='range'}
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Finished assignment for group at generation 31: {consumer-payment-service-retry-6000-3-8b6cad58-c706-4330-b458-c3bba84115e7=Assignment(partitions=[order-topic-retry-6000-0])}
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Finished assignment for group at generation 31: {consumer-payment-service-dlt-1-b058a5d2-51da-4ad3-b8bc-0cd7c80a3839=Assignment(partitions=[order-topic-dlt-0])}
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Finished assignment for group at generation 31: {consumer-payment-service-retry-3000-2-8b65ea31-87c7-4e3c-8e02-b0a6450fa2d8=Assignment(partitions=[order-topic-retry-3000-0])}
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Finished assignment for group at generation 31: {consumer-payment-service-4-e4a5b486-be21-4dcf-ab68-9f837de994c9=Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])}
2024-09-16 15:18:56 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Started PaymentServiceApplication in 3.538 seconds (process running for 3.753)
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully synced group in generation Generation{generationId=31, memberId='consumer-payment-service-4-e4a5b486-be21-4dcf-ab68-9f837de994c9', protocol='range'}
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully synced group in generation Generation{generationId=31, memberId='consumer-payment-service-dlt-1-b058a5d2-51da-4ad3-b8bc-0cd7c80a3839', protocol='range'}
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully synced group in generation Generation{generationId=31, memberId='consumer-payment-service-retry-3000-2-8b65ea31-87c7-4e3c-8e02-b0a6450fa2d8', protocol='range'}
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully synced group in generation Generation{generationId=31, memberId='consumer-payment-service-retry-6000-3-8b6cad58-c706-4330-b458-c3bba84115e7', protocol='range'}
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Notifying assignor about the new Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-3000-0])
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Notifying assignor about the new Assignment(partitions=[order-topic-dlt-0])
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-6000-0])
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Adding newly assigned partitions: order-topic-retry-6000-0
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Adding newly assigned partitions: order-topic-0, order-topic-1, order-topic-2
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Adding newly assigned partitions: order-topic-dlt-0
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Adding newly assigned partitions: order-topic-retry-3000-0
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Setting offset for partition order-topic-retry-6000-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Setting offset for partition order-topic-dlt-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Setting offset for partition order-topic-retry-3000-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-2 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-1 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions assigned: [order-topic-retry-6000-0]
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions assigned: [order-topic-dlt-0]
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions assigned: [order-topic-retry-3000-0]
2024-09-16 15:18:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions assigned: [order-topic-0, order-topic-1, order-topic-2]
2024-09-16 15:19:24 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application PAYMENT-SERVICE with eureka with status DOWN
2024-09-16 15:19:24 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1726489164820, current=DOWN, previous=UP]
2024-09-16 15:19:24 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Revoke previously assigned partitions order-topic-0, order-topic-1, order-topic-2
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Revoke previously assigned partitions order-topic-retry-6000-0
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Revoke previously assigned partitions order-topic-retry-3000-0
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Revoke previously assigned partitions order-topic-dlt-0
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions revoked: [order-topic-0, order-topic-1, order-topic-2]
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions revoked: [order-topic-retry-6000-0]
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions revoked: [order-topic-retry-3000-0]
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions revoked: [order-topic-dlt-0]
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Member consumer-payment-service-retry-6000-3-8b6cad58-c706-4330-b458-c3bba84115e7 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Member consumer-payment-service-4-e4a5b486-be21-4dcf-ab68-9f837de994c9 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Member consumer-payment-service-retry-3000-2-8b65ea31-87c7-4e3c-8e02-b0a6450fa2d8 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Member consumer-payment-service-dlt-1-b058a5d2-51da-4ad3-b8bc-0cd7c80a3839 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 15:19:24 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-6000-3 unregistered
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: Consumer stopped
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-3000-2 unregistered
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: Consumer stopped
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-4 unregistered
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: Consumer stopped
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-dlt-1 unregistered
2024-09-16 15:19:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: Consumer stopped
2024-09-16 15:19:24 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-16 15:19:24 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-16 15:19:24 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-16 15:19:24 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2024-09-16 15:19:26 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2024-09-16 15:19:26 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2024-09-16 15:19:26 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2024-09-16 15:19:26 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2024-09-16 15:19:26 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2024-09-16 15:19:26 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: false
2024-09-16 15:19:26 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2024-09-16 15:19:26 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2024-09-16 15:19:27 [DiscoveryClient-0] WARN  c.n.discovery.TimedSupervisorTask - task supervisor shutting down, can't accept the task
2024-09-16 15:19:27 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2024-09-16 15:19:27 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - deregister  status: 200
2024-09-16 15:19:27 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2024-09-16 15:19:35 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-09-16 15:19:35 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Starting PaymentServiceApplication using Java 17.0.11 with PID 341854 (/home/kacha/Project/e-commerce/paymentservice/target/classes started by kacha in /home/kacha/Project/e-commerce/paymentservice)
2024-09-16 15:19:35 [restartedMain] INFO  c.e.p.PaymentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2024-09-16 15:19:35 [restartedMain] INFO  o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in /home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar referenced one or more files that do not exist: file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-api-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/txw2-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/istack-commons-runtime-3.0.7.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/stax-ex-1.8.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/FastInfoset-1.2.15.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/javax.activation-api-1.2.0.jar
2024-09-16 15:19:35 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-09-16 15:19:35 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-09-16 15:19:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-16 15:19:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 61 ms. Found 1 JPA repository interface.
2024-09-16 15:19:36 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=bb937d62-efc6-3637-95ac-76e931403e2b
2024-09-16 15:19:36 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-16 15:19:36 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:19:36 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:19:36 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:19:36 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:19:36 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$712/0x00007e7ae44cc800] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:19:36 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:19:36 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:19:36 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:19:36 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:19:36 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:19:36 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:19:36 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:19:36 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:19:36 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:19:36 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:19:36 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:19:36 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:19:36 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:19:36 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:19:36 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-16 15:19:36 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:19:36 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-16 15:19:36 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8183 (http)
2024-09-16 15:19:36 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8183"]
2024-09-16 15:19:36 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-16 15:19:36 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-09-16 15:19:36 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/payments] - Initializing Spring embedded WebApplicationContext
2024-09-16 15:19:36 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1033 ms
2024-09-16 15:19:36 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-16 15:19:36 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-16 15:19:36 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-16 15:19:36 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-16 15:19:36 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-16 15:19:37 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@63004ec6
2024-09-16 15:19:37 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-16 15:19:37 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JTA platform [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
2024-09-16 15:19:37 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-16 15:19:38 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-16 15:19:38 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2024-09-16 15:19:38 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-16 15:19:38 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-16 15:19:38 [restartedMain] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-09-16 15:19:38 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 15:19:38 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 15:19:38 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726489178515
2024-09-16 15:19:38 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2024-09-16 15:19:38 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 15:19:38 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 15:19:38 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 15:19:38 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2024-09-16 15:19:38 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2024-09-16 15:19:38 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 15:19:38 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2024-09-16 15:19:38 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2024-09-16 15:19:38 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2024-09-16 15:19:38 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2024-09-16 15:19:38 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2024-09-16 15:19:38 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2024-09-16 15:19:38 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2024-09-16 15:19:38 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2024-09-16 15:19:38 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2024-09-16 15:19:38 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-09-16 15:19:38 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1726489178835 with initial instances count: 1
2024-09-16 15:19:38 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application PAYMENT-SERVICE with eureka with status UP
2024-09-16 15:19:38 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1726489178837, current=UP, previous=STARTING]
2024-09-16 15:19:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-16 15:19:38 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8183"]
2024-09-16 15:19:38 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8183 (http) with context path '/payments'
2024-09-16 15:19:38 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8183
2024-09-16 15:19:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-16 15:19:39 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-dlt-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-dlt
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 15:19:39 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 15:19:39 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 15:19:39 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726489179038
2024-09-16 15:19:39 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Subscribed to topic(s): order-topic-dlt
2024-09-16 15:19:39 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-3000-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-3000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 15:19:39 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 15:19:39 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 15:19:39 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726489179046
2024-09-16 15:19:39 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Subscribed to topic(s): order-topic-retry-3000
2024-09-16 15:19:39 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-6000-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-6000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 15:19:39 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 15:19:39 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 15:19:39 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726489179051
2024-09-16 15:19:39 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Subscribed to topic(s): order-topic-retry-6000
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 15:19:39 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 15:19:39 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-16 15:19:39 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-16 15:19:39 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1726489179056
2024-09-16 15:19:39 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Subscribed to topic(s): order-topic
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-4-45858a49-9dac-4d4e-b8ee-85bf6b6634b2
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-6000-3-931a25b9-05e1-4b5c-95b2-d77a97e490b6
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-dlt-1-f91e1aad-32c7-4e8d-b932-7e3e1c395f9f
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-3000-2-7cb86832-7867-4e1c-b6b0-ceeb32984dbb
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully joined group with generation Generation{generationId=33, memberId='consumer-payment-service-dlt-1-f91e1aad-32c7-4e8d-b932-7e3e1c395f9f', protocol='range'}
2024-09-16 15:19:39 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Started PaymentServiceApplication in 3.653 seconds (process running for 3.884)
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully joined group with generation Generation{generationId=33, memberId='consumer-payment-service-retry-3000-2-7cb86832-7867-4e1c-b6b0-ceeb32984dbb', protocol='range'}
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully joined group with generation Generation{generationId=33, memberId='consumer-payment-service-4-45858a49-9dac-4d4e-b8ee-85bf6b6634b2', protocol='range'}
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully joined group with generation Generation{generationId=33, memberId='consumer-payment-service-retry-6000-3-931a25b9-05e1-4b5c-95b2-d77a97e490b6', protocol='range'}
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Finished assignment for group at generation 33: {consumer-payment-service-retry-6000-3-931a25b9-05e1-4b5c-95b2-d77a97e490b6=Assignment(partitions=[order-topic-retry-6000-0])}
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Finished assignment for group at generation 33: {consumer-payment-service-dlt-1-f91e1aad-32c7-4e8d-b932-7e3e1c395f9f=Assignment(partitions=[order-topic-dlt-0])}
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Finished assignment for group at generation 33: {consumer-payment-service-retry-3000-2-7cb86832-7867-4e1c-b6b0-ceeb32984dbb=Assignment(partitions=[order-topic-retry-3000-0])}
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Finished assignment for group at generation 33: {consumer-payment-service-4-45858a49-9dac-4d4e-b8ee-85bf6b6634b2=Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])}
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully synced group in generation Generation{generationId=33, memberId='consumer-payment-service-4-45858a49-9dac-4d4e-b8ee-85bf6b6634b2', protocol='range'}
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully synced group in generation Generation{generationId=33, memberId='consumer-payment-service-retry-6000-3-931a25b9-05e1-4b5c-95b2-d77a97e490b6', protocol='range'}
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully synced group in generation Generation{generationId=33, memberId='consumer-payment-service-retry-3000-2-7cb86832-7867-4e1c-b6b0-ceeb32984dbb', protocol='range'}
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully synced group in generation Generation{generationId=33, memberId='consumer-payment-service-dlt-1-f91e1aad-32c7-4e8d-b932-7e3e1c395f9f', protocol='range'}
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Notifying assignor about the new Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-6000-0])
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-3000-0])
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Notifying assignor about the new Assignment(partitions=[order-topic-dlt-0])
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Adding newly assigned partitions: order-topic-retry-6000-0
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Adding newly assigned partitions: order-topic-dlt-0
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Adding newly assigned partitions: order-topic-0, order-topic-1, order-topic-2
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Adding newly assigned partitions: order-topic-retry-3000-0
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-2 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Setting offset for partition order-topic-dlt-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Setting offset for partition order-topic-retry-6000-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Setting offset for partition order-topic-retry-3000-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-1 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions assigned: [order-topic-0, order-topic-1, order-topic-2]
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions assigned: [order-topic-retry-6000-0]
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions assigned: [order-topic-dlt-0]
2024-09-16 15:19:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions assigned: [order-topic-retry-3000-0]
2024-09-16 15:24:38 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 15:28:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-16 15:28:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-16 15:28:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-16 15:28:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-16 15:29:38 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-16 15:32:52 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application PAYMENT-SERVICE with eureka with status DOWN
2024-09-16 15:32:52 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1726489972228, current=DOWN, previous=UP]
2024-09-16 15:32:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-16 15:32:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Revoke previously assigned partitions order-topic-retry-6000-0
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Revoke previously assigned partitions order-topic-dlt-0
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Revoke previously assigned partitions order-topic-0, order-topic-1, order-topic-2
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Revoke previously assigned partitions order-topic-retry-3000-0
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions revoked: [order-topic-dlt-0]
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions revoked: [order-topic-retry-3000-0]
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions revoked: [order-topic-retry-6000-0]
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions revoked: [order-topic-0, order-topic-1, order-topic-2]
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Member consumer-payment-service-4-45858a49-9dac-4d4e-b8ee-85bf6b6634b2 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Member consumer-payment-service-dlt-1-f91e1aad-32c7-4e8d-b932-7e3e1c395f9f sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Member consumer-payment-service-retry-6000-3-931a25b9-05e1-4b5c-95b2-d77a97e490b6 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Member consumer-payment-service-retry-3000-2-7cb86832-7867-4e1c-b6b0-ceeb32984dbb sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Unsubscribed all topics or patterns and assigned partitions
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-6000-3 unregistered
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-4 unregistered
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: Consumer stopped
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: Consumer stopped
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-dlt-1 unregistered
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: Consumer stopped
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-3000-2 unregistered
2024-09-16 15:32:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: Consumer stopped
2024-09-16 15:32:52 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-16 15:32:52 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-16 15:32:52 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-16 15:32:52 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2024-09-16 15:32:55 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2024-09-16 15:32:55 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - deregister  status: 200
2024-09-16 15:32:55 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
