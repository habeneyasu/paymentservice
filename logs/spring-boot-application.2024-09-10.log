2024-09-10 10:14:20 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-09-10 10:14:20 [main] INFO  c.e.o.PaymentServiceApplicationTests - Starting PaymentServiceApplicationTests using Java 17.0.11 with PID 36745 (started by kacha in /home/kacha/Project/e-commerce/paymentservice)
2024-09-10 10:14:20 [main] INFO  c.e.o.PaymentServiceApplicationTests - No active profile set, falling back to 1 default profile: "default"
2024-09-10 10:14:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-10 10:14:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 84 ms. Found 1 JPA repository interface.
2024-09-10 10:14:21 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=75596c6a-1814-3add-823a-bb0abc8a4bca
2024-09-10 10:14:21 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-10 10:14:21 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:14:21 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:14:21 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:14:21 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:14:21 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$1066/0x000074b58c545398] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:14:21 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:14:21 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:14:21 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:14:21 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:14:21 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:14:21 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:14:21 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:14:21 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:14:21 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:14:21 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:14:21 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:14:21 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:14:21 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:14:21 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:14:21 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-10 10:14:21 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:14:21 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:14:21 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-10 10:14:21 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-10 10:14:21 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-10 10:14:21 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-10 10:14:21 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-10 10:14:22 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@746fd19b
2024-09-10 10:14:22 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-10 10:14:22 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JTA platform [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
2024-09-10 10:14:22 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-10 10:14:23 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-10 10:14:23 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2024-09-10 10:14:23 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2024-09-10 10:14:23 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2024-09-10 10:14:23 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-10 10:14:23 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-10 10:14:23 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-09-10 10:14:23 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 10:14:23 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 10:14:23 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725952463832
2024-09-10 10:14:23 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:23 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:23 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:23 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:24 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:24 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:24 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:24 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:24 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:24 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:25 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:25 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:26 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:26 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:27 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:27 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:28 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:28 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:29 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:29 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:30 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:30 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:32 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:32 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:33 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:33 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:34 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:34 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:35 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:35 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:36 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:36 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:37 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:37 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:38 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:38 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:39 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:39 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:40 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:40 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:41 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:41 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:42 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:42 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:43 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:43 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:45 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:45 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:46 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:46 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:47 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:47 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:48 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:48 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:49 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:49 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:50 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:50 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:51 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:51 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:52 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:52 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:53 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:53 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:53 [kafka-admin-client-thread | adminclient-1] INFO  o.a.k.c.a.i.AdminMetadataManager - [AdminClient clientId=adminclient-1] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: Timed out waiting for a node assignment. Call: fetchMetadata
2024-09-10 10:14:53 [main] ERROR o.s.kafka.core.KafkaAdmin - Could not configure topics
org.springframework.kafka.KafkaException: Timed out waiting to get existing topics
	at org.springframework.kafka.core.KafkaAdmin.lambda$checkPartitions$11(KafkaAdmin.java:520)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.springframework.kafka.core.KafkaAdmin.checkPartitions(KafkaAdmin.java:499)
	at org.springframework.kafka.core.KafkaAdmin.addOrModifyTopicsIfNeeded(KafkaAdmin.java:392)
	at org.springframework.kafka.core.KafkaAdmin.initialize(KafkaAdmin.java:258)
	at org.springframework.kafka.core.KafkaAdmin.afterSingletonsInstantiated(KafkaAdmin.java:222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:986)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: java.util.concurrent.TimeoutException: null
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.apache.kafka.common.internals.KafkaFutureImpl.get(KafkaFutureImpl.java:180)
	at org.springframework.kafka.core.KafkaAdmin.lambda$checkPartitions$11(KafkaAdmin.java:502)
	... 93 common frames omitted
2024-09-10 10:14:54 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:54 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:55 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:55 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:56 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:56 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:57 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:57 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:58 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:58 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:14:59 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:14:59 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:01 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:15:01 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:02 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:15:02 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:03 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2024-09-10 10:15:03 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:03 [kafka-admin-client-thread | adminclient-1] INFO  o.a.k.clients.admin.KafkaAdminClient - [AdminClient clientId=adminclient-1] Forcing a hard I/O thread shutdown. Requests in progress will be aborted.
2024-09-10 10:15:03 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2024-09-10 10:15:03 [kafka-admin-client-thread | adminclient-1] INFO  o.a.k.c.a.i.AdminMetadataManager - [AdminClient clientId=adminclient-1] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: The AdminClient thread has exited. Call: fetchMetadata
2024-09-10 10:15:03 [kafka-admin-client-thread | adminclient-1] INFO  o.a.k.clients.admin.KafkaAdminClient - [AdminClient clientId=adminclient-1] Timed out 2 remaining operation(s) during close.
2024-09-10 10:15:03 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 10:15:03 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 10:15:03 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 10:15:03 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2024-09-10 10:15:03 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2024-09-10 10:15:03 [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 10:15:03 [main] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2024-09-10 10:15:03 [main] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2024-09-10 10:15:03 [main] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2024-09-10 10:15:03 [main] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2024-09-10 10:15:03 [main] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2024-09-10 10:15:03 [main] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2024-09-10 10:15:03 [main] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2024-09-10 10:15:04 [main] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2024-09-10 10:15:04 [main] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2024-09-10 10:15:04 [main] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-09-10 10:15:04 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1725952504101 with initial instances count: 2
2024-09-10 10:15:04 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application PAYMENT-SERVICE with eureka with status UP
2024-09-10 10:15:04 [main] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1725952504103, current=UP, previous=STARTING]
2024-09-10 10:15:04 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-10 10:15:04 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-dlt-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-dlt
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 10:15:04 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-10 10:15:04 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 10:15:04 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 10:15:04 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725952504160
2024-09-10 10:15:04 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Assigned to partition(s): order-topic-1, order-topic-2
2024-09-10 10:15:04 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-3000-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-3000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 10:15:04 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 10:15:04 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 10:15:04 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725952504168
2024-09-10 10:15:04 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Assigned to partition(s): order-topic-1, order-topic-2
2024-09-10 10:15:04 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-6000-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-6000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 10:15:04 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 10:15:04 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 10:15:04 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725952504172
2024-09-10 10:15:04 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Assigned to partition(s): order-topic-1, order-topic-2
2024-09-10 10:15:04 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 10:15:04 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 10:15:04 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 10:15:04 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725952504179
2024-09-10 10:15:04 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Assigned to partition(s): order-topic-1, order-topic-2
2024-09-10 10:15:04 [main] INFO  c.e.o.PaymentServiceApplicationTests - Started PaymentServiceApplicationTests in 44.444 seconds (process running for 45.025)
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:04 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application PAYMENT-SERVICE with eureka with status DOWN
2024-09-10 10:15:04 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1725952504674, current=DOWN, previous=UP]
2024-09-10 10:15:04 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-10 10:15:04 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:15:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:15:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:15:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:15:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-10 10:15:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-10 10:15:34 [SpringApplicationShutdownHook] INFO  o.s.c.s.DefaultLifecycleProcessor - Shutdown phase 2147483547 ends with 1 bean still running after timeout of 30000ms: [org.springframework.kafka.config.internalKafkaListenerEndpointRegistry]
2024-09-10 10:15:34 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-10 10:15:34 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-10 10:15:34 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-10 10:15:34 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2024-09-10 10:17:19 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-09-10 10:17:19 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Starting PaymentServiceApplication using Java 17.0.11 with PID 38516 (/home/kacha/Project/e-commerce/paymentservice/target/classes started by kacha in /home/kacha/Project/e-commerce/paymentservice)
2024-09-10 10:17:19 [restartedMain] INFO  c.e.p.PaymentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2024-09-10 10:17:19 [restartedMain] INFO  o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in /home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar referenced one or more files that do not exist: file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-api-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/txw2-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/istack-commons-runtime-3.0.7.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/stax-ex-1.8.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/FastInfoset-1.2.15.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/javax.activation-api-1.2.0.jar
2024-09-10 10:17:19 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-09-10 10:17:19 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-09-10 10:17:19 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-10 10:17:19 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60 ms. Found 1 JPA repository interface.
2024-09-10 10:17:20 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=1d06102a-a445-30a5-b3c3-b7d07dc1ba04
2024-09-10 10:17:20 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-10 10:17:20 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:17:20 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:17:20 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:17:20 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:17:20 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$711/0x000074e5144b0eb8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:17:20 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:17:20 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:17:20 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:17:20 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:17:20 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:17:20 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:17:20 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:17:20 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:17:20 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:17:20 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:17:20 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:17:20 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:17:20 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:17:20 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:17:20 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-10 10:17:20 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:17:20 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 10:17:20 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8183 (http)
2024-09-10 10:17:20 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8183"]
2024-09-10 10:17:20 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-10 10:17:20 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-09-10 10:17:20 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/payments] - Initializing Spring embedded WebApplicationContext
2024-09-10 10:17:20 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 906 ms
2024-09-10 10:17:20 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-10 10:17:20 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-10 10:17:20 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-10 10:17:20 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-10 10:17:20 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-10 10:17:20 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3f757e3b
2024-09-10 10:17:20 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-10 10:17:21 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JTA platform [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
2024-09-10 10:17:21 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-10 10:17:21 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-10 10:17:21 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
2024-09-10 10:17:21 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-10 10:17:21 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-10 10:17:21 [restartedMain] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-09-10 10:17:21 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 10:17:21 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 10:17:21 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725952641966
2024-09-10 10:17:22 [restartedMain] INFO  o.s.kafka.core.KafkaAdmin - Topic 'order-topic' exists but has a different partition count: 3 not 1
2024-09-10 10:17:22 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2024-09-10 10:17:22 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 10:17:22 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 10:17:22 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 10:17:22 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2024-09-10 10:17:22 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2024-09-10 10:17:22 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 10:17:22 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2024-09-10 10:17:22 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2024-09-10 10:17:22 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2024-09-10 10:17:22 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2024-09-10 10:17:22 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2024-09-10 10:17:22 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2024-09-10 10:17:22 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2024-09-10 10:17:22 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2024-09-10 10:17:22 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2024-09-10 10:17:22 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-09-10 10:17:22 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1725952642388 with initial instances count: 3
2024-09-10 10:17:22 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application PAYMENT-SERVICE with eureka with status UP
2024-09-10 10:17:22 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1725952642390, current=UP, previous=STARTING]
2024-09-10 10:17:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-10 10:17:22 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8183"]
2024-09-10 10:17:22 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8183 (http) with context path '/payments'
2024-09-10 10:17:22 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8183
2024-09-10 10:17:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-10 10:17:22 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-dlt-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-dlt
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 10:17:22 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 10:17:22 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 10:17:22 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725952642503
2024-09-10 10:17:22 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Assigned to partition(s): order-topic-1, order-topic-2
2024-09-10 10:17:22 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-3000-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-3000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 10:17:22 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 10:17:22 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 10:17:22 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725952642509
2024-09-10 10:17:22 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Assigned to partition(s): order-topic-1, order-topic-2
2024-09-10 10:17:22 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-6000-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-6000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 10:17:22 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 10:17:22 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 10:17:22 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725952642515
2024-09-10 10:17:22 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Assigned to partition(s): order-topic-1, order-topic-2
2024-09-10 10:17:22 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 10:17:22 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 10:17:22 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 10:17:22 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725952642520
2024-09-10 10:17:22 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Assigned to partition(s): order-topic-1, order-topic-2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Found no committed offset for partition order-topic-1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Found no committed offset for partition order-topic-1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Found no committed offset for partition order-topic-1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Found no committed offset for partition order-topic-1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Found no committed offset for partition order-topic-2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Found no committed offset for partition order-topic-2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Found no committed offset for partition order-topic-2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Found no committed offset for partition order-topic-2
2024-09-10 10:17:22 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Started PaymentServiceApplication in 3.321 seconds (process running for 3.566)
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting offset for partition order-topic-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}.
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting offset for partition order-topic-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}.
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting offset for partition order-topic-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}.
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting offset for partition order-topic-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}.
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting offset for partition order-topic-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}.
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting offset for partition order-topic-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}.
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting offset for partition order-topic-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}.
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting offset for partition order-topic-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}.
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :null
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :null
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :null
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Order is placed with oreder code of:ORD987AH and amount:90
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Order is placed with oreder code of:ORD987AH and amount:90
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Order is placed with oreder code of:ORD987AH and amount:90
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :0
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :0
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :null
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :null
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Order is placed with oreder code of:ORD987H and amount:90
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Order is placed with oreder code of:ORD987H and amount:90
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :daf409ec-b25b-485d-b89d-d6bf540ed48e
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Order is placed with oreder code of:8080ABD and amount:2300000
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :daf409ec-b25b-485d-b89d-d6bf540ed48e
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Order is placed with oreder code of:8080ABD and amount:2300000
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :f5509a0e-0ad2-4281-9f69-33197b80a42e
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Your order has been placed. The order code is: 90ABK09ADUI. The total amount is: 45000
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :3
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :f5509a0e-0ad2-4281-9f69-33197b80a42e
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :a78e75ba-ead9-4fb6-b178-a56bf9470341
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Your order has been placed. The order code is: 90ABK09ADUI. The total amount is: 45000
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Your order has been placed. The order code is: 90ABK09ADUI. The total amount is: 45000
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :3
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :4
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :0789f08d-5203-4a27-94df-e508e4ae9b0c
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :a78e75ba-ead9-4fb6-b178-a56bf9470341
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Your order has been placed. The order code is: AP8976WED. The total amount is: 3000
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Your order has been placed. The order code is: 90ABK09ADUI. The total amount is: 45000
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :5
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :4faa0245-ee4d-46d8-b6fa-996474d8d51f
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Your order has been placed. The order code is: 09UI45. The total amount is: 7800
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :4
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :6
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :0789f08d-5203-4a27-94df-e508e4ae9b0c
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :null
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Order is placed with oreder code of:ABC4501 and amount:90
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Your order has been placed. The order code is: AP8976WED. The total amount is: 3000
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :0
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :f8fb6a46-c865-404e-9b29-b8ea3f0f9b75
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :5
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Order is placed with oreder code of:ABC4501 and amount:90
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :4faa0245-ee4d-46d8-b6fa-996474d8d51f
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :1a2d39fe-4b55-4751-ad95-2d44004a7c8a
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Your order has been placed. The order code is: 09UI45. The total amount is: 7800
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Order is placed with oreder code of:PLE3784 and amount:90
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :6
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :null
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :0
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Order is placed with oreder code of:ABC4501 and amount:90
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :0
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :null
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :f8fb6a46-c865-404e-9b29-b8ea3f0f9b75
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Order is placed with oreder code of:ORD987H and amount:90
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Order is placed with oreder code of:ABC4501 and amount:90
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :1657521d-645a-4c82-8b2c-b5b620517a2f
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Order is placed with oreder code of:8080ABD and amount:2300000
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :3
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :1a2d39fe-4b55-4751-ad95-2d44004a7c8a
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :daf409ec-b25b-485d-b89d-d6bf540ed48e
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :a208c64b-af1f-4089-a514-00ae9246073a
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Order is placed with oreder code of:PLE3784 and amount:90
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Order is placed with oreder code of:HJKHKH8979 and amount:8000
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Order is placed with oreder code of:8080ABD and amount:2300000
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :1657521d-645a-4c82-8b2c-b5b620517a2f
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :4
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Order is placed with oreder code of:8080ABD and amount:2300000
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :9e5e3874-7714-4d59-98d6-c0bf751bfc48
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :3
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Your order has been placed. The order code is: TLHKJH573. The total amount is: 6200
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :a208c64b-af1f-4089-a514-00ae9246073a
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :f5509a0e-0ad2-4281-9f69-33197b80a42e
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Order is placed with oreder code of:HJKHKH8979 and amount:8000
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :5
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :4
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :0d93c6e6-ba1b-469c-8ff6-e643246e2c53
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Your order has been placed. The order code is: 90ABK09ADUI. The total amount is: 45000
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Your order has been placed. The order code is: TLHKJH573. The total amount is: 6200
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :9e5e3874-7714-4d59-98d6-c0bf751bfc48
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Your order has been placed. The order code is: TLHKJH573. The total amount is: 6200
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :6
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :5
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :3
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :0d93c6e6-ba1b-469c-8ff6-e643246e2c53
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :cb7b77f5-7988-44e1-a84c-b995f8a92816
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Your order has been placed. The order code is: TLHKJH573. The total amount is: 6200
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Your order has been placed. The order code is: 09UI45. The total amount is: 7800
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :a78e75ba-ead9-4fb6-b178-a56bf9470341
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :6
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :7
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Your order has been placed. The order code is: 90ABK09ADUI. The total amount is: 45000
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :cb7b77f5-7988-44e1-a84c-b995f8a92816
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Your order has been placed. The order code is: 09UI45. The total amount is: 7800
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :4
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :7
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :0789f08d-5203-4a27-94df-e508e4ae9b0c
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Your order has been placed. The order code is: AP8976WED. The total amount is: 3000
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :5
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :4faa0245-ee4d-46d8-b6fa-996474d8d51f
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Your order has been placed. The order code is: 09UI45. The total amount is: 7800
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :6
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :null
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.r.RetryTopicConfigurer - Received message in dlt listener: order-topic-1@0
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Order is placed with oreder code of:ABC4501 and amount:90
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :0
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :f8fb6a46-c865-404e-9b29-b8ea3f0f9b75
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.r.RetryTopicConfigurer - Received message in dlt listener: order-topic-1@1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Order is placed with oreder code of:ABC4501 and amount:90
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :1a2d39fe-4b55-4751-ad95-2d44004a7c8a
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.r.RetryTopicConfigurer - Received message in dlt listener: order-topic-1@2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Order is placed with oreder code of:PLE3784 and amount:90
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.r.RetryTopicConfigurer - Received message in dlt listener: order-topic-1@3
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :1657521d-645a-4c82-8b2c-b5b620517a2f
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Order is placed with oreder code of:8080ABD and amount:2300000
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.r.RetryTopicConfigurer - Received message in dlt listener: order-topic-1@4
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :3
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :a208c64b-af1f-4089-a514-00ae9246073a
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.r.RetryTopicConfigurer - Received message in dlt listener: order-topic-1@5
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Order is placed with oreder code of:HJKHKH8979 and amount:8000
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :4
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.r.RetryTopicConfigurer - Received message in dlt listener: order-topic-1@6
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :9e5e3874-7714-4d59-98d6-c0bf751bfc48
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Your order has been placed. The order code is: TLHKJH573. The total amount is: 6200
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.r.RetryTopicConfigurer - Received message in dlt listener: order-topic-2@0
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :5
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :0d93c6e6-ba1b-469c-8ff6-e643246e2c53
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.r.RetryTopicConfigurer - Received message in dlt listener: order-topic-2@1
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Your order has been placed. The order code is: TLHKJH573. The total amount is: 6200
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :6
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.r.RetryTopicConfigurer - Received message in dlt listener: order-topic-2@2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :cb7b77f5-7988-44e1-a84c-b995f8a92816
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :Your order has been placed. The order code is: 09UI45. The total amount is: 7800
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.r.RetryTopicConfigurer - Received message in dlt listener: order-topic-2@3
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:2
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :7
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.r.RetryTopicConfigurer - Received message in dlt listener: order-topic-2@4
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.r.RetryTopicConfigurer - Received message in dlt listener: order-topic-2@5
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.r.RetryTopicConfigurer - Received message in dlt listener: order-topic-2@6
2024-09-10 10:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.r.RetryTopicConfigurer - Received message in dlt listener: order-topic-2@7
2024-09-10 10:21:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :7b88faf7-4592-44a3-ba99-fdcf8ed7178a
2024-09-10 10:21:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :7b88faf7-4592-44a3-ba99-fdcf8ed7178a
2024-09-10 10:21:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :EEBBIIDD
2024-09-10 10:21:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :EEBBIIDD
2024-09-10 10:21:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:2
2024-09-10 10:21:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:2
2024-09-10 10:21:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :8
2024-09-10 10:21:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :8
2024-09-10 10:21:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.r.RetryTopicConfigurer - Received message in dlt listener: order-topic-2@8
2024-09-10 10:21:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :7b88faf7-4592-44a3-ba99-fdcf8ed7178a
2024-09-10 10:21:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :EEBBIIDD
2024-09-10 10:21:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:2
2024-09-10 10:21:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :8
2024-09-10 10:22:22 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 10:24:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.r.RetryTopicConfigurer - Received message in dlt listener: order-topic-1@7
2024-09-10 10:24:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :9a5db9c7-93d6-4f3f-b27e-9454327848fd
2024-09-10 10:24:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :HABENEYASU
2024-09-10 10:24:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:1
2024-09-10 10:24:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :7
2024-09-10 10:24:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :9a5db9c7-93d6-4f3f-b27e-9454327848fd
2024-09-10 10:24:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :9a5db9c7-93d6-4f3f-b27e-9454327848fd
2024-09-10 10:24:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :HABENEYASU
2024-09-10 10:24:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :HABENEYASU
2024-09-10 10:24:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:1
2024-09-10 10:24:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:1
2024-09-10 10:24:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :7
2024-09-10 10:24:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :7
2024-09-10 10:26:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 10:26:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 10:26:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 10:26:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 10:27:22 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 10:32:22 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 10:33:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node 2147483647 disconnected.
2024-09-10 10:33:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node 2147483647 disconnected.
2024-09-10 10:33:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node 2147483647 disconnected.
2024-09-10 10:33:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node 2147483647 disconnected.
2024-09-10 10:37:22 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 10:42:22 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 10:47:22 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 10:52:22 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 10:57:22 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 11:02:22 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 11:07:22 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 11:12:22 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 11:17:22 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 11:22:22 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 11:27:22 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 11:32:22 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 11:37:22 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 11:42:22 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 11:47:22 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 11:52:22 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 11:57:22 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 12:02:22 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 12:07:22 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 12:12:22 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 12:17:22 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 12:22:22 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 12:27:22 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 12:32:22 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 12:33:35 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application PAYMENT-SERVICE with eureka with status DOWN
2024-09-10 12:33:35 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1725960815648, current=DOWN, previous=UP]
2024-09-10 12:33:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Unsubscribed all topics or patterns and assigned partitions
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Unsubscribed all topics or patterns and assigned partitions
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Unsubscribed all topics or patterns and assigned partitions
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Unsubscribed all topics or patterns and assigned partitions
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 12:33:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-4 unregistered
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: Consumer stopped
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-6000-3 unregistered
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: Consumer stopped
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-3000-2 unregistered
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: Consumer stopped
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-dlt-1 unregistered
2024-09-10 12:33:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: Consumer stopped
2024-09-10 12:33:35 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-10 12:33:35 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-10 12:33:35 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-10 12:33:35 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2024-09-10 12:33:38 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2024-09-10 12:33:38 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - deregister  status: 200
2024-09-10 12:33:38 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2024-09-10 12:33:49 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-09-10 12:33:49 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Starting PaymentServiceApplication using Java 17.0.11 with PID 45091 (/home/kacha/Project/e-commerce/paymentservice/target/classes started by kacha in /home/kacha/Project/e-commerce/paymentservice)
2024-09-10 12:33:49 [restartedMain] INFO  c.e.p.PaymentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2024-09-10 12:33:49 [restartedMain] INFO  o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in /home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar referenced one or more files that do not exist: file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-api-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/txw2-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/istack-commons-runtime-3.0.7.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/stax-ex-1.8.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/FastInfoset-1.2.15.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/javax.activation-api-1.2.0.jar
2024-09-10 12:33:49 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-09-10 12:33:49 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-09-10 12:33:49 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-10 12:33:49 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 94 ms. Found 1 JPA repository interface.
2024-09-10 12:33:50 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=1d06102a-a445-30a5-b3c3-b7d07dc1ba04
2024-09-10 12:33:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-10 12:33:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 12:33:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 12:33:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 12:33:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 12:33:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$710/0x000071a544494400] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 12:33:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 12:33:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 12:33:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 12:33:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 12:33:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 12:33:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 12:33:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 12:33:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 12:33:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 12:33:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 12:33:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 12:33:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 12:33:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 12:33:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 12:33:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-10 12:33:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 12:33:50 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 12:33:50 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8183 (http)
2024-09-10 12:33:50 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8183"]
2024-09-10 12:33:50 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-10 12:33:50 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-09-10 12:33:50 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/payments] - Initializing Spring embedded WebApplicationContext
2024-09-10 12:33:50 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1071 ms
2024-09-10 12:33:50 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-10 12:33:50 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-10 12:33:50 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-10 12:33:50 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-10 12:33:50 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-10 12:33:50 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@143cf04b
2024-09-10 12:33:50 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-10 12:33:51 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JTA platform [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
2024-09-10 12:33:51 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-10 12:33:52 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-10 12:33:52 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
2024-09-10 12:33:52 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-10 12:33:52 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-10 12:33:52 [restartedMain] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-09-10 12:33:52 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 12:33:52 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 12:33:52 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725960832798
2024-09-10 12:33:52 [restartedMain] INFO  o.s.kafka.core.KafkaAdmin - Topic 'order-topic' exists but has a different partition count: 3 not 1
2024-09-10 12:33:52 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2024-09-10 12:33:52 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 12:33:52 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 12:33:52 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 12:33:53 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2024-09-10 12:33:53 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2024-09-10 12:33:53 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 12:33:53 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2024-09-10 12:33:53 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2024-09-10 12:33:53 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2024-09-10 12:33:53 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2024-09-10 12:33:53 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2024-09-10 12:33:53 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2024-09-10 12:33:53 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2024-09-10 12:33:53 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2024-09-10 12:33:53 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2024-09-10 12:33:53 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-09-10 12:33:53 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1725960833186 with initial instances count: 2
2024-09-10 12:33:53 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application PAYMENT-SERVICE with eureka with status UP
2024-09-10 12:33:53 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1725960833189, current=UP, previous=STARTING]
2024-09-10 12:33:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-10 12:33:53 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8183"]
2024-09-10 12:33:53 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8183 (http) with context path '/payments'
2024-09-10 12:33:53 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8183
2024-09-10 12:33:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-10 12:33:53 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-dlt-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-dlt
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 12:33:53 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 12:33:53 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 12:33:53 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725960833307
2024-09-10 12:33:53 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Subscribed to topic(s): order-topic-dlt
2024-09-10 12:33:53 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-3000-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-3000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 12:33:53 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 12:33:53 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 12:33:53 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725960833315
2024-09-10 12:33:53 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Subscribed to topic(s): order-topic-retry-3000
2024-09-10 12:33:53 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-6000-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-6000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 12:33:53 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 12:33:53 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 12:33:53 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725960833319
2024-09-10 12:33:53 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Subscribed to topic(s): order-topic-retry-6000
2024-09-10 12:33:53 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-10 12:33:53 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 12:33:53 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 12:33:53 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725960833323
2024-09-10 12:33:53 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Subscribed to topic(s): order-topic
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-10 12:33:53 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Started PaymentServiceApplication in 4.331 seconds (process running for 4.554)
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-4-2446b614-fa3c-4a95-8cae-911c7bea04dc
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-dlt-1-5f251514-8ee5-4466-997d-cac0dc2f6420
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-6000-3-9fa2f44c-c32f-4b58-8505-ccc8e26aef4f
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-3000-2-b903cccf-1f1f-4b8c-a954-b735c0788b6a
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully joined group with generation Generation{generationId=1, memberId='consumer-payment-service-dlt-1-5f251514-8ee5-4466-997d-cac0dc2f6420', protocol='range'}
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully joined group with generation Generation{generationId=1, memberId='consumer-payment-service-retry-6000-3-9fa2f44c-c32f-4b58-8505-ccc8e26aef4f', protocol='range'}
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully joined group with generation Generation{generationId=1, memberId='consumer-payment-service-retry-3000-2-b903cccf-1f1f-4b8c-a954-b735c0788b6a', protocol='range'}
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully joined group with generation Generation{generationId=1, memberId='consumer-payment-service-4-2446b614-fa3c-4a95-8cae-911c7bea04dc', protocol='range'}
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Finished assignment for group at generation 1: {consumer-payment-service-4-2446b614-fa3c-4a95-8cae-911c7bea04dc=Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])}
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Finished assignment for group at generation 1: {consumer-payment-service-retry-6000-3-9fa2f44c-c32f-4b58-8505-ccc8e26aef4f=Assignment(partitions=[order-topic-retry-6000-0])}
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Finished assignment for group at generation 1: {consumer-payment-service-retry-3000-2-b903cccf-1f1f-4b8c-a954-b735c0788b6a=Assignment(partitions=[order-topic-retry-3000-0])}
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Finished assignment for group at generation 1: {consumer-payment-service-dlt-1-5f251514-8ee5-4466-997d-cac0dc2f6420=Assignment(partitions=[order-topic-dlt-0])}
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully synced group in generation Generation{generationId=1, memberId='consumer-payment-service-dlt-1-5f251514-8ee5-4466-997d-cac0dc2f6420', protocol='range'}
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully synced group in generation Generation{generationId=1, memberId='consumer-payment-service-4-2446b614-fa3c-4a95-8cae-911c7bea04dc', protocol='range'}
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully synced group in generation Generation{generationId=1, memberId='consumer-payment-service-retry-3000-2-b903cccf-1f1f-4b8c-a954-b735c0788b6a', protocol='range'}
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully synced group in generation Generation{generationId=1, memberId='consumer-payment-service-retry-6000-3-9fa2f44c-c32f-4b58-8505-ccc8e26aef4f', protocol='range'}
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Notifying assignor about the new Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-3000-0])
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-6000-0])
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Notifying assignor about the new Assignment(partitions=[order-topic-dlt-0])
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Adding newly assigned partitions: order-topic-0, order-topic-1, order-topic-2
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Adding newly assigned partitions: order-topic-retry-6000-0
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Adding newly assigned partitions: order-topic-retry-3000-0
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Adding newly assigned partitions: order-topic-dlt-0
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Found no committed offset for partition order-topic-retry-3000-0
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Found no committed offset for partition order-topic-0
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Found no committed offset for partition order-topic-retry-6000-0
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Found no committed offset for partition order-topic-dlt-0
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-2 to the committed offset FetchPosition{offset=9, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-1 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting offset for partition order-topic-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}.
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting offset for partition order-topic-retry-3000-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}.
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting offset for partition order-topic-retry-6000-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}.
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting offset for partition order-topic-dlt-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}.
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions assigned: [order-topic-0, order-topic-1, order-topic-2]
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions assigned: [order-topic-dlt-0]
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions assigned: [order-topic-retry-3000-0]
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions assigned: [order-topic-retry-6000-0]
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725960833944
2024-09-10 12:33:53 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 12:33:53 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 2001 with epoch 0
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Seeking to offset 0 for partition order-topic-retry-3000-0
2024-09-10 12:33:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Seeking to offset 1 for partition order-topic-0
2024-09-10 12:33:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Seeking to offset 2 for partition order-topic-0
2024-09-10 12:33:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Order code =============================--------------------->:PORU43123
2024-09-10 12:33:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Status    =============================--------------------->::PENDING
2024-09-10 12:33:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Amount    =============================--------------------->:7502.00
2024-09-10 12:33:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - CreatedAt =============================--------------------->:2024-09-10T10:19:13.580617
2024-09-10 12:33:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :5166726a-bc18-4b27-a5eb-0f3b45e80537
2024-09-10 12:33:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :PORU43123
2024-09-10 12:33:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:0
2024-09-10 12:33:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :2
2024-09-10 12:33:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Seeking to offset 1 for partition order-topic-retry-3000-0
2024-09-10 12:33:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Seeking to offset 0 for partition order-topic-retry-6000-0
2024-09-10 12:34:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] ERROR o.s.k.r.DeadLetterPublishingRecovererFactory - Record: topic = order-topic-retry-6000, partition = 0, offset = 0, main topic = order-topic threw an error at topic order-topic-retry-6000 and won't be retried. Sending to DLT with name order-topic-dlt.
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2961)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2902)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2866)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$55(KafkaMessageListenerContainer.java:2783)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2781)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2631)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2517)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2155)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1495)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1460)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1330)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.springframework.kafka.listener.TimestampedException: Exception thrown at 2024-09-10T09:34:02.643292183Z
	at org.springframework.kafka.listener.adapter.KafkaBackoffAwareMessageListenerAdapter.onMessage(KafkaBackoffAwareMessageListenerAdapter.java:100)
	at org.springframework.kafka.listener.adapter.KafkaBackoffAwareMessageListenerAdapter.onMessage(KafkaBackoffAwareMessageListenerAdapter.java:49)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2888)
	... 12 common frames omitted
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.ecommerce.paymentservice.service.PaymentServiceImp.consumeOrder(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>)' threw exception
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:391)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.adapter.KafkaBackoffAwareMessageListenerAdapter.invokeDelegateOnMessage(KafkaBackoffAwareMessageListenerAdapter.java:106)
	at org.springframework.kafka.listener.adapter.KafkaBackoffAwareMessageListenerAdapter.onMessage(KafkaBackoffAwareMessageListenerAdapter.java:97)
	... 14 common frames omitted
Caused by: java.lang.NullPointerException: Cannot invoke "com.ecommerce.paymentservice.modeldto.OrderResponseDTO.getOrderCode()" because "findOrder" is null
	at com.ecommerce.paymentservice.service.PaymentServiceImp.consumeOrder(PaymentServiceImp.java:95)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:376)
	... 18 common frames omitted
2024-09-10 12:34:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Seeking to offset 1 for partition order-topic-retry-6000-0
2024-09-10 12:34:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.r.RetryTopicConfigurer - Received message in dlt listener: order-topic-dlt-0@0
2024-09-10 12:34:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] ERROR o.s.k.r.DeadLetterPublishingRecovererFactory - Record: topic = order-topic-retry-6000, partition = 0, offset = 1, main topic = order-topic threw an error at topic order-topic-retry-6000 and won't be retried. Sending to DLT with name order-topic-dlt.
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2961)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2902)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2866)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$55(KafkaMessageListenerContainer.java:2783)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2781)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2631)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2517)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2155)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1495)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1460)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1330)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.springframework.kafka.listener.TimestampedException: Exception thrown at 2024-09-10T09:34:03.161265860Z
	at org.springframework.kafka.listener.adapter.KafkaBackoffAwareMessageListenerAdapter.onMessage(KafkaBackoffAwareMessageListenerAdapter.java:100)
	at org.springframework.kafka.listener.adapter.KafkaBackoffAwareMessageListenerAdapter.onMessage(KafkaBackoffAwareMessageListenerAdapter.java:49)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2888)
	... 12 common frames omitted
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.ecommerce.paymentservice.service.PaymentServiceImp.consumeOrder(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>)' threw exception
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:391)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.adapter.KafkaBackoffAwareMessageListenerAdapter.invokeDelegateOnMessage(KafkaBackoffAwareMessageListenerAdapter.java:106)
	at org.springframework.kafka.listener.adapter.KafkaBackoffAwareMessageListenerAdapter.onMessage(KafkaBackoffAwareMessageListenerAdapter.java:97)
	... 14 common frames omitted
Caused by: java.lang.NullPointerException: Cannot invoke "com.ecommerce.paymentservice.modeldto.OrderResponseDTO.getOrderCode()" because "findOrder" is null
	at com.ecommerce.paymentservice.service.PaymentServiceImp.consumeOrder(PaymentServiceImp.java:95)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:376)
	... 18 common frames omitted
2024-09-10 12:34:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.r.RetryTopicConfigurer - Received message in dlt listener: order-topic-dlt-0@1
2024-09-10 12:36:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Order code =============================--------------------->:MAI832AM
2024-09-10 12:36:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Status    =============================--------------------->::PENDING
2024-09-10 12:36:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Amount    =============================--------------------->:53345.00
2024-09-10 12:36:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - CreatedAt =============================--------------------->:2024-09-10T12:36:36.456920
2024-09-10 12:36:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :879c6706-0a67-460b-b4bb-38f6e312e82a
2024-09-10 12:36:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :MAI832AM
2024-09-10 12:36:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:0
2024-09-10 12:36:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :3
2024-09-10 12:38:53 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 12:38:53 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition order-topic-retry-6000-0 to 0 since the associated topicId changed from null to Ocd8umAzRHC4Vw4iPvMXQg
2024-09-10 12:38:53 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition order-topic-retry-3000-0 to 0 since the associated topicId changed from null to MGDLw9EHRkmNsJ4ud9bFfQ
2024-09-10 12:39:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Order code =============================--------------------->:404040PPBBUU9713
2024-09-10 12:39:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Status    =============================--------------------->::PENDING
2024-09-10 12:39:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Amount    =============================--------------------->:404040.00
2024-09-10 12:39:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - CreatedAt =============================--------------------->:2024-09-10T12:39:26.200521
2024-09-10 12:39:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :e82a4551-8199-4504-8027-a81911b4890a
2024-09-10 12:39:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :404040PPBBUU9713
2024-09-10 12:39:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:0
2024-09-10 12:39:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :4
2024-09-10 12:42:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 12:42:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 12:42:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 12:42:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 12:42:54 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node -1 disconnected.
2024-09-10 12:43:53 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 12:48:53 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 12:53:53 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 12:58:53 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 13:03:53 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 13:08:53 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 13:13:53 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 13:18:53 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 13:23:53 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 13:28:53 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 13:33:53 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 13:37:53 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application PAYMENT-SERVICE with eureka with status DOWN
2024-09-10 13:37:53 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1725964673763, current=DOWN, previous=UP]
2024-09-10 13:37:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Revoke previously assigned partitions order-topic-dlt-0
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Revoke previously assigned partitions order-topic-retry-3000-0
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Revoke previously assigned partitions order-topic-0, order-topic-1, order-topic-2
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Revoke previously assigned partitions order-topic-retry-6000-0
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions revoked: [order-topic-retry-6000-0]
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions revoked: [order-topic-0, order-topic-1, order-topic-2]
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions revoked: [order-topic-dlt-0]
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions revoked: [order-topic-retry-3000-0]
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Member consumer-payment-service-retry-6000-3-9fa2f44c-c32f-4b58-8505-ccc8e26aef4f sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Member consumer-payment-service-dlt-1-5f251514-8ee5-4466-997d-cac0dc2f6420 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Member consumer-payment-service-4-2446b614-fa3c-4a95-8cae-911c7bea04dc sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Member consumer-payment-service-retry-3000-2-b903cccf-1f1f-4b8c-a954-b735c0788b6a sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Unsubscribed all topics or patterns and assigned partitions
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Unsubscribed all topics or patterns and assigned partitions
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Unsubscribed all topics or patterns and assigned partitions
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Unsubscribed all topics or patterns and assigned partitions
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 13:37:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-3000-2 unregistered
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-6000-3 unregistered
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: Consumer stopped
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: Consumer stopped
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-4 unregistered
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: Consumer stopped
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-dlt-1 unregistered
2024-09-10 13:37:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: Consumer stopped
2024-09-10 13:37:53 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2024-09-10 13:37:53 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 13:37:53 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 13:37:53 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 13:37:53 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2024-09-10 13:37:53 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-10 13:37:53 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-10 13:37:53 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-10 13:37:53 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2024-09-10 13:37:56 [DiscoveryClient-0] WARN  c.n.discovery.TimedSupervisorTask - task supervisor shutting down, can't accept the task
2024-09-10 13:37:56 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2024-09-10 13:37:56 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - deregister  status: 200
2024-09-10 13:37:56 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2024-09-10 13:38:04 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-09-10 13:38:04 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Starting PaymentServiceApplication using Java 17.0.11 with PID 49075 (/home/kacha/Project/e-commerce/paymentservice/target/classes started by kacha in /home/kacha/Project/e-commerce/paymentservice)
2024-09-10 13:38:04 [restartedMain] INFO  c.e.p.PaymentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2024-09-10 13:38:04 [restartedMain] INFO  o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in /home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar referenced one or more files that do not exist: file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-api-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/txw2-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/istack-commons-runtime-3.0.7.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/stax-ex-1.8.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/FastInfoset-1.2.15.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/javax.activation-api-1.2.0.jar
2024-09-10 13:38:04 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-09-10 13:38:04 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-09-10 13:38:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-10 13:38:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 61 ms. Found 1 JPA repository interface.
2024-09-10 13:38:05 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=1d06102a-a445-30a5-b3c3-b7d07dc1ba04
2024-09-10 13:38:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-10 13:38:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:38:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:38:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:38:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:38:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$710/0x000075e9a44b0eb8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:38:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:38:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:38:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:38:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:38:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:38:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:38:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:38:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:38:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:38:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:38:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:38:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:38:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:38:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:38:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-10 13:38:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:38:05 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:38:06 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8183 (http)
2024-09-10 13:38:06 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8183"]
2024-09-10 13:38:06 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-10 13:38:06 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-09-10 13:38:06 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/payments] - Initializing Spring embedded WebApplicationContext
2024-09-10 13:38:06 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1080 ms
2024-09-10 13:38:06 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-10 13:38:06 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-10 13:38:06 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-10 13:38:06 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-10 13:38:06 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-10 13:38:06 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1a35a59d
2024-09-10 13:38:06 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-10 13:38:06 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JTA platform [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
2024-09-10 13:38:06 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-10 13:38:07 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-10 13:38:07 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
2024-09-10 13:38:08 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-10 13:38:08 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-10 13:38:08 [restartedMain] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-09-10 13:38:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 13:38:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 13:38:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725964688271
2024-09-10 13:38:08 [restartedMain] INFO  o.s.kafka.core.KafkaAdmin - Topic 'order-topic' exists but has a different partition count: 3 not 1
2024-09-10 13:38:08 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2024-09-10 13:38:08 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 13:38:08 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 13:38:08 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 13:38:08 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2024-09-10 13:38:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2024-09-10 13:38:08 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 13:38:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2024-09-10 13:38:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2024-09-10 13:38:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2024-09-10 13:38:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2024-09-10 13:38:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2024-09-10 13:38:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2024-09-10 13:38:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2024-09-10 13:38:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2024-09-10 13:38:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2024-09-10 13:38:08 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-09-10 13:38:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1725964688620 with initial instances count: 3
2024-09-10 13:38:08 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application PAYMENT-SERVICE with eureka with status UP
2024-09-10 13:38:08 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1725964688622, current=UP, previous=STARTING]
2024-09-10 13:38:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-10 13:38:08 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8183"]
2024-09-10 13:38:08 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8183 (http) with context path '/payments'
2024-09-10 13:38:08 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8183
2024-09-10 13:38:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-10 13:38:08 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-dlt-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-dlt
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 13:38:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 13:38:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 13:38:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725964688980
2024-09-10 13:38:08 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Subscribed to topic(s): order-topic-dlt
2024-09-10 13:38:08 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-3000-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-3000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 13:38:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 13:38:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 13:38:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725964688990
2024-09-10 13:38:08 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Subscribed to topic(s): order-topic-retry-3000
2024-09-10 13:38:08 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-6000-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-6000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 13:38:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 13:38:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 13:38:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-10 13:38:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-10 13:38:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 13:38:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 13:38:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725964688995
2024-09-10 13:38:08 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Subscribed to topic(s): order-topic-retry-6000
2024-09-10 13:38:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-10 13:38:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-10 13:38:08 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 13:38:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 13:38:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-10 13:38:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-10 13:38:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 13:38:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 13:38:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725964688999
2024-09-10 13:38:09 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Subscribed to topic(s): order-topic
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-6000-3-92616bf1-899e-4778-aa55-61637d51fe06
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-dlt-1-8fba7fed-b5dc-4a85-af04-62beab3bc83c
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-3000-2-298a5799-2c85-45bf-95dc-117332e01552
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-4-fe050430-3170-4678-886f-716dfafbc069
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully joined group with generation Generation{generationId=3, memberId='consumer-payment-service-dlt-1-8fba7fed-b5dc-4a85-af04-62beab3bc83c', protocol='range'}
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully joined group with generation Generation{generationId=3, memberId='consumer-payment-service-retry-3000-2-298a5799-2c85-45bf-95dc-117332e01552', protocol='range'}
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully joined group with generation Generation{generationId=3, memberId='consumer-payment-service-retry-6000-3-92616bf1-899e-4778-aa55-61637d51fe06', protocol='range'}
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully joined group with generation Generation{generationId=3, memberId='consumer-payment-service-4-fe050430-3170-4678-886f-716dfafbc069', protocol='range'}
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Finished assignment for group at generation 3: {consumer-payment-service-4-fe050430-3170-4678-886f-716dfafbc069=Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])}
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Finished assignment for group at generation 3: {consumer-payment-service-retry-3000-2-298a5799-2c85-45bf-95dc-117332e01552=Assignment(partitions=[order-topic-retry-3000-0])}
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Finished assignment for group at generation 3: {consumer-payment-service-retry-6000-3-92616bf1-899e-4778-aa55-61637d51fe06=Assignment(partitions=[order-topic-retry-6000-0])}
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Finished assignment for group at generation 3: {consumer-payment-service-dlt-1-8fba7fed-b5dc-4a85-af04-62beab3bc83c=Assignment(partitions=[order-topic-dlt-0])}
2024-09-10 13:38:09 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Started PaymentServiceApplication in 4.436 seconds (process running for 4.686)
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully synced group in generation Generation{generationId=3, memberId='consumer-payment-service-retry-6000-3-92616bf1-899e-4778-aa55-61637d51fe06', protocol='range'}
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully synced group in generation Generation{generationId=3, memberId='consumer-payment-service-4-fe050430-3170-4678-886f-716dfafbc069', protocol='range'}
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully synced group in generation Generation{generationId=3, memberId='consumer-payment-service-dlt-1-8fba7fed-b5dc-4a85-af04-62beab3bc83c', protocol='range'}
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully synced group in generation Generation{generationId=3, memberId='consumer-payment-service-retry-3000-2-298a5799-2c85-45bf-95dc-117332e01552', protocol='range'}
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-6000-0])
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Notifying assignor about the new Assignment(partitions=[order-topic-dlt-0])
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Notifying assignor about the new Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-3000-0])
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Adding newly assigned partitions: order-topic-retry-6000-0
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Adding newly assigned partitions: order-topic-dlt-0
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Adding newly assigned partitions: order-topic-0, order-topic-1, order-topic-2
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Adding newly assigned partitions: order-topic-retry-3000-0
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-2 to the committed offset FetchPosition{offset=9, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Setting offset for partition order-topic-retry-3000-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Setting offset for partition order-topic-retry-6000-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Setting offset for partition order-topic-dlt-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-1 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions assigned: [order-topic-retry-6000-0]
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions assigned: [order-topic-0, order-topic-1, order-topic-2]
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions assigned: [order-topic-retry-3000-0]
2024-09-10 13:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions assigned: [order-topic-dlt-0]
2024-09-10 13:39:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.s.k.l.DeadLetterPublishingRecoverer - Destination resolver returned non-existent partition order-topic-retry-3000-2, KafkaProducer will determine partition to use for this topic
2024-09-10 13:39:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2024-09-10 13:39:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2024-09-10 13:39:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 13:39:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 13:39:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725964787457
2024-09-10 13:39:47 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 13:39:47 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 2004 with epoch 0
2024-09-10 13:39:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Seeking to offset 2 for partition order-topic-retry-3000-0
2024-09-10 13:39:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Seeking to offset 2 for partition order-topic-retry-6000-0
2024-09-10 13:39:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] ERROR o.s.k.r.DeadLetterPublishingRecovererFactory - Record: topic = order-topic-retry-6000, partition = 0, offset = 2, main topic = order-topic threw an error at topic order-topic-retry-6000 and won't be retried. Sending to DLT with name order-topic-dlt.
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2961)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2902)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2866)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$55(KafkaMessageListenerContainer.java:2783)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2781)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2631)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2517)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2155)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1495)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1460)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1330)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.springframework.kafka.listener.TimestampedException: Exception thrown at 2024-09-10T10:39:56.253773777Z
	at org.springframework.kafka.listener.adapter.KafkaBackoffAwareMessageListenerAdapter.onMessage(KafkaBackoffAwareMessageListenerAdapter.java:100)
	at org.springframework.kafka.listener.adapter.KafkaBackoffAwareMessageListenerAdapter.onMessage(KafkaBackoffAwareMessageListenerAdapter.java:49)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2888)
	... 12 common frames omitted
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.ecommerce.paymentservice.service.PaymentServiceImp.consumeOrder(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>)' threw exception
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:391)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.adapter.KafkaBackoffAwareMessageListenerAdapter.invokeDelegateOnMessage(KafkaBackoffAwareMessageListenerAdapter.java:106)
	at org.springframework.kafka.listener.adapter.KafkaBackoffAwareMessageListenerAdapter.onMessage(KafkaBackoffAwareMessageListenerAdapter.java:97)
	... 14 common frames omitted
Caused by: java.lang.NullPointerException: Cannot invoke "com.ecommerce.paymentservice.repository.PaymentRepository.findTopByOrderByOrderCodeDesc()" because "this.paymentRepository" is null
	at com.ecommerce.paymentservice.util.ConfigSetting.generateOrderCode(ConfigSetting.java:13)
	at com.ecommerce.paymentservice.service.PaymentServiceImp.createPayment(PaymentServiceImp.java:59)
	at com.ecommerce.paymentservice.service.PaymentServiceImp.consumeOrder(PaymentServiceImp.java:103)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:376)
	... 18 common frames omitted
2024-09-10 13:39:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.r.RetryTopicConfigurer - Received message in dlt listener: order-topic-dlt-0@2
2024-09-10 13:41:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.s.k.l.DeadLetterPublishingRecoverer - Destination resolver returned non-existent partition order-topic-retry-3000-1, KafkaProducer will determine partition to use for this topic
2024-09-10 13:41:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Seeking to offset 3 for partition order-topic-retry-3000-0
2024-09-10 13:42:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Seeking to offset 3 for partition order-topic-retry-6000-0
2024-09-10 13:42:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] ERROR o.s.k.r.DeadLetterPublishingRecovererFactory - Record: topic = order-topic-retry-6000, partition = 0, offset = 3, main topic = order-topic threw an error at topic order-topic-retry-6000 and won't be retried. Sending to DLT with name order-topic-dlt.
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2961)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2902)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2866)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$55(KafkaMessageListenerContainer.java:2783)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2781)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2631)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2517)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2155)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1495)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1460)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1330)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.springframework.kafka.listener.TimestampedException: Exception thrown at 2024-09-10T10:42:06.777364547Z
	at org.springframework.kafka.listener.adapter.KafkaBackoffAwareMessageListenerAdapter.onMessage(KafkaBackoffAwareMessageListenerAdapter.java:100)
	at org.springframework.kafka.listener.adapter.KafkaBackoffAwareMessageListenerAdapter.onMessage(KafkaBackoffAwareMessageListenerAdapter.java:49)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2888)
	... 12 common frames omitted
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.ecommerce.paymentservice.service.PaymentServiceImp.consumeOrder(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>)' threw exception
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:391)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.adapter.KafkaBackoffAwareMessageListenerAdapter.invokeDelegateOnMessage(KafkaBackoffAwareMessageListenerAdapter.java:106)
	at org.springframework.kafka.listener.adapter.KafkaBackoffAwareMessageListenerAdapter.onMessage(KafkaBackoffAwareMessageListenerAdapter.java:97)
	... 14 common frames omitted
Caused by: java.lang.NullPointerException: Cannot invoke "com.ecommerce.paymentservice.repository.PaymentRepository.findTopByOrderByOrderCodeDesc()" because "this.paymentRepository" is null
	at com.ecommerce.paymentservice.util.ConfigSetting.generateOrderCode(ConfigSetting.java:13)
	at com.ecommerce.paymentservice.service.PaymentServiceImp.createPayment(PaymentServiceImp.java:59)
	at com.ecommerce.paymentservice.service.PaymentServiceImp.consumeOrder(PaymentServiceImp.java:103)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:376)
	... 18 common frames omitted
2024-09-10 13:42:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.r.RetryTopicConfigurer - Received message in dlt listener: order-topic-dlt-0@3
2024-09-10 13:43:08 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 13:44:47 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition order-topic-retry-6000-0 to 0 since the associated topicId changed from null to Ocd8umAzRHC4Vw4iPvMXQg
2024-09-10 13:44:47 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition order-topic-retry-3000-0 to 0 since the associated topicId changed from null to MGDLw9EHRkmNsJ4ud9bFfQ
2024-09-10 13:44:54 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application PAYMENT-SERVICE with eureka with status DOWN
2024-09-10 13:44:54 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1725965094782, current=DOWN, previous=UP]
2024-09-10 13:44:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Revoke previously assigned partitions order-topic-dlt-0
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Revoke previously assigned partitions order-topic-retry-3000-0
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Revoke previously assigned partitions order-topic-retry-6000-0
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Revoke previously assigned partitions order-topic-0, order-topic-1, order-topic-2
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions revoked: [order-topic-dlt-0]
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions revoked: [order-topic-retry-3000-0]
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions revoked: [order-topic-retry-6000-0]
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions revoked: [order-topic-0, order-topic-1, order-topic-2]
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Member consumer-payment-service-dlt-1-8fba7fed-b5dc-4a85-af04-62beab3bc83c sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Member consumer-payment-service-retry-3000-2-298a5799-2c85-45bf-95dc-117332e01552 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Member consumer-payment-service-retry-6000-3-92616bf1-899e-4778-aa55-61637d51fe06 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Member consumer-payment-service-4-fe050430-3170-4678-886f-716dfafbc069 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Unsubscribed all topics or patterns and assigned partitions
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Unsubscribed all topics or patterns and assigned partitions
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Unsubscribed all topics or patterns and assigned partitions
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Unsubscribed all topics or patterns and assigned partitions
2024-09-10 13:44:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 13:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 13:44:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 13:44:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 13:44:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 13:44:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 13:44:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 13:44:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 13:44:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 13:44:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 13:44:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 13:44:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 13:44:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 13:44:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 13:44:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-dlt-1 unregistered
2024-09-10 13:44:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-3000-2 unregistered
2024-09-10 13:44:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: Consumer stopped
2024-09-10 13:44:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: Consumer stopped
2024-09-10 13:44:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-6000-3 unregistered
2024-09-10 13:44:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: Consumer stopped
2024-09-10 13:44:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-4 unregistered
2024-09-10 13:44:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: Consumer stopped
2024-09-10 13:44:55 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2024-09-10 13:44:55 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 13:44:55 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 13:44:55 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 13:44:55 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2024-09-10 13:44:55 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-10 13:44:55 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-10 13:44:55 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-10 13:44:55 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2024-09-10 13:44:58 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2024-09-10 13:44:58 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - deregister  status: 200
2024-09-10 13:44:58 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2024-09-10 13:45:06 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-09-10 13:45:06 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Starting PaymentServiceApplication using Java 17.0.11 with PID 50082 (/home/kacha/Project/e-commerce/paymentservice/target/classes started by kacha in /home/kacha/Project/e-commerce/paymentservice)
2024-09-10 13:45:06 [restartedMain] INFO  c.e.p.PaymentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2024-09-10 13:45:06 [restartedMain] INFO  o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in /home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar referenced one or more files that do not exist: file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-api-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/txw2-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/istack-commons-runtime-3.0.7.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/stax-ex-1.8.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/FastInfoset-1.2.15.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/javax.activation-api-1.2.0.jar
2024-09-10 13:45:06 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-09-10 13:45:06 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-09-10 13:45:06 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-10 13:45:06 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 61 ms. Found 1 JPA repository interface.
2024-09-10 13:45:07 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=1d06102a-a445-30a5-b3c3-b7d07dc1ba04
2024-09-10 13:45:07 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-10 13:45:07 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:45:07 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:45:07 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:45:07 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:45:07 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$710/0x000075ecf8484400] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:45:07 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:45:07 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:45:07 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:45:07 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:45:07 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:45:07 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:45:07 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:45:07 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:45:07 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:45:07 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:45:07 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:45:07 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:45:07 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:45:07 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:45:07 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-10 13:45:07 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:45:07 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:45:07 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8183 (http)
2024-09-10 13:45:07 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8183"]
2024-09-10 13:45:07 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-10 13:45:07 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-09-10 13:45:07 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/payments] - Initializing Spring embedded WebApplicationContext
2024-09-10 13:45:07 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1036 ms
2024-09-10 13:45:07 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-10 13:45:07 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-10 13:45:07 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-10 13:45:07 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-10 13:45:07 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-10 13:45:07 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4ff5331d
2024-09-10 13:45:07 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-10 13:45:08 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JTA platform [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
2024-09-10 13:45:08 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-10 13:45:08 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-10 13:45:08 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
2024-09-10 13:45:09 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-10 13:45:09 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-10 13:45:09 [restartedMain] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-09-10 13:45:09 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 13:45:09 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 13:45:09 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725965109228
2024-09-10 13:45:09 [restartedMain] INFO  o.s.kafka.core.KafkaAdmin - Topic 'order-topic' exists but has a different partition count: 3 not 1
2024-09-10 13:45:09 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2024-09-10 13:45:09 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 13:45:09 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 13:45:09 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 13:45:09 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2024-09-10 13:45:09 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2024-09-10 13:45:09 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 13:45:09 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2024-09-10 13:45:09 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2024-09-10 13:45:09 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2024-09-10 13:45:09 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2024-09-10 13:45:09 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2024-09-10 13:45:09 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2024-09-10 13:45:09 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2024-09-10 13:45:09 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2024-09-10 13:45:09 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2024-09-10 13:45:09 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-09-10 13:45:09 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1725965109578 with initial instances count: 3
2024-09-10 13:45:09 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application PAYMENT-SERVICE with eureka with status UP
2024-09-10 13:45:09 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1725965109580, current=UP, previous=STARTING]
2024-09-10 13:45:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-10 13:45:09 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8183"]
2024-09-10 13:45:09 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8183 (http) with context path '/payments'
2024-09-10 13:45:09 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8183
2024-09-10 13:45:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-10 13:45:09 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-dlt-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-dlt
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 13:45:09 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 13:45:09 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 13:45:09 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725965109720
2024-09-10 13:45:09 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Subscribed to topic(s): order-topic-dlt
2024-09-10 13:45:09 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-3000-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-3000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 13:45:09 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 13:45:09 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 13:45:09 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725965109730
2024-09-10 13:45:09 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Subscribed to topic(s): order-topic-retry-3000
2024-09-10 13:45:09 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-6000-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-6000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-10 13:45:09 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 13:45:09 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 13:45:09 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725965109736
2024-09-10 13:45:09 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Subscribed to topic(s): order-topic-retry-6000
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-10 13:45:09 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-10 13:45:09 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 13:45:09 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 13:45:09 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725965109741
2024-09-10 13:45:09 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Subscribed to topic(s): order-topic
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-3000-2-88e94512-8239-4709-b8ad-182035f02299
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-6000-3-0ddde4b1-cb97-4382-a9ca-49f944697ba0
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-dlt-1-90ef58fa-2cb9-4bb5-be2d-e970fccb1d53
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-4-aadad71c-8763-47c4-996f-293c48c1ca8e
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully joined group with generation Generation{generationId=5, memberId='consumer-payment-service-retry-3000-2-88e94512-8239-4709-b8ad-182035f02299', protocol='range'}
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully joined group with generation Generation{generationId=5, memberId='consumer-payment-service-retry-6000-3-0ddde4b1-cb97-4382-a9ca-49f944697ba0', protocol='range'}
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully joined group with generation Generation{generationId=5, memberId='consumer-payment-service-dlt-1-90ef58fa-2cb9-4bb5-be2d-e970fccb1d53', protocol='range'}
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully joined group with generation Generation{generationId=5, memberId='consumer-payment-service-4-aadad71c-8763-47c4-996f-293c48c1ca8e', protocol='range'}
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Finished assignment for group at generation 5: {consumer-payment-service-retry-3000-2-88e94512-8239-4709-b8ad-182035f02299=Assignment(partitions=[order-topic-retry-3000-0])}
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Finished assignment for group at generation 5: {consumer-payment-service-dlt-1-90ef58fa-2cb9-4bb5-be2d-e970fccb1d53=Assignment(partitions=[order-topic-dlt-0])}
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Finished assignment for group at generation 5: {consumer-payment-service-retry-6000-3-0ddde4b1-cb97-4382-a9ca-49f944697ba0=Assignment(partitions=[order-topic-retry-6000-0])}
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Finished assignment for group at generation 5: {consumer-payment-service-4-aadad71c-8763-47c4-996f-293c48c1ca8e=Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])}
2024-09-10 13:45:09 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Started PaymentServiceApplication in 3.71 seconds (process running for 3.956)
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully synced group in generation Generation{generationId=5, memberId='consumer-payment-service-retry-6000-3-0ddde4b1-cb97-4382-a9ca-49f944697ba0', protocol='range'}
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully synced group in generation Generation{generationId=5, memberId='consumer-payment-service-4-aadad71c-8763-47c4-996f-293c48c1ca8e', protocol='range'}
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully synced group in generation Generation{generationId=5, memberId='consumer-payment-service-dlt-1-90ef58fa-2cb9-4bb5-be2d-e970fccb1d53', protocol='range'}
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully synced group in generation Generation{generationId=5, memberId='consumer-payment-service-retry-3000-2-88e94512-8239-4709-b8ad-182035f02299', protocol='range'}
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Notifying assignor about the new Assignment(partitions=[order-topic-dlt-0])
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-6000-0])
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-3000-0])
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Notifying assignor about the new Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Adding newly assigned partitions: order-topic-dlt-0
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Adding newly assigned partitions: order-topic-retry-3000-0
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Adding newly assigned partitions: order-topic-retry-6000-0
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Adding newly assigned partitions: order-topic-0, order-topic-1, order-topic-2
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Setting offset for partition order-topic-retry-3000-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Setting offset for partition order-topic-retry-6000-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Setting offset for partition order-topic-dlt-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-2 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-1 to the committed offset FetchPosition{offset=9, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions assigned: [order-topic-retry-3000-0]
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions assigned: [order-topic-retry-6000-0]
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions assigned: [order-topic-dlt-0]
2024-09-10 13:45:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions assigned: [order-topic-0, order-topic-1, order-topic-2]
2024-09-10 13:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - -------------------------------------Test reult-------->:UUID989
2024-09-10 13:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1048, SQLState: 23000
2024-09-10 13:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Column 'created_at' cannot be null
2024-09-10 13:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2024-09-10 13:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2024-09-10 13:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 13:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 13:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725965131906
2024-09-10 13:45:31 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 13:45:31 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 2005 with epoch 0
2024-09-10 13:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Seeking to offset 4 for partition order-topic-retry-3000-0
2024-09-10 13:45:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  c.e.p.controller.PaymentController - -------------------------------------Test reult-------->:UUID989
2024-09-10 13:45:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1048, SQLState: 23000
2024-09-10 13:45:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Column 'created_at' cannot be null
2024-09-10 13:45:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Seeking to offset 4 for partition order-topic-retry-6000-0
2024-09-10 13:45:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  c.e.p.controller.PaymentController - -------------------------------------Test reult-------->:UUID989
2024-09-10 13:45:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1048, SQLState: 23000
2024-09-10 13:45:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Column 'created_at' cannot be null
2024-09-10 13:45:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] ERROR o.s.k.r.DeadLetterPublishingRecovererFactory - Record: topic = order-topic-retry-6000, partition = 0, offset = 4, main topic = order-topic threw an error at topic order-topic-retry-6000 and won't be retried. Sending to DLT with name order-topic-dlt.
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2961)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2902)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2866)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$55(KafkaMessageListenerContainer.java:2783)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2781)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2631)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2517)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2155)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1495)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1460)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1330)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.springframework.kafka.listener.TimestampedException: Exception thrown at 2024-09-10T10:45:40.717952558Z
	at org.springframework.kafka.listener.adapter.KafkaBackoffAwareMessageListenerAdapter.onMessage(KafkaBackoffAwareMessageListenerAdapter.java:100)
	at org.springframework.kafka.listener.adapter.KafkaBackoffAwareMessageListenerAdapter.onMessage(KafkaBackoffAwareMessageListenerAdapter.java:49)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2888)
	... 12 common frames omitted
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.ecommerce.paymentservice.service.PaymentServiceImp.consumeOrder(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>)' threw exception
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:391)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.adapter.KafkaBackoffAwareMessageListenerAdapter.invokeDelegateOnMessage(KafkaBackoffAwareMessageListenerAdapter.java:106)
	at org.springframework.kafka.listener.adapter.KafkaBackoffAwareMessageListenerAdapter.onMessage(KafkaBackoffAwareMessageListenerAdapter.java:97)
	... 14 common frames omitted
Caused by: org.springframework.dao.DataIntegrityViolationException: could not execute statement [Column 'created_at' cannot be null] [insert into payments (amount,created_at,created_by,order_code,payment_method,transaction_ref,updated_at,updated_by) values (?,?,?,?,?,?,?,?)]; SQL [insert into payments (amount,created_at,created_by,order_code,payment_method,transaction_ref,updated_at,updated_by) values (?,?,?,?,?,?,?,?)]; constraint [null]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:290)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy4/jdk.proxy4.$Proxy152.save(Unknown Source)
	at com.ecommerce.paymentservice.service.PaymentServiceImp.createPayment(PaymentServiceImp.java:62)
	at com.ecommerce.paymentservice.service.PaymentServiceImp.consumeOrder(PaymentServiceImp.java:104)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:376)
	... 18 common frames omitted
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [Column 'created_at' cannot be null] [insert into payments (amount,created_at,created_by,order_code,payment_method,transaction_ref,updated_at,updated_by) values (?,?,?,?,?,?,?,?)]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:62)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:175)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:113)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2858)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:388)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:302)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:221)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:135)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:758)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:742)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy4/jdk.proxy4.$Proxy148.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:619)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	... 35 common frames omitted
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'created_at' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1098)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1046)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1371)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1031)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	... 85 common frames omitted
2024-09-10 13:45:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.r.RetryTopicConfigurer - Received message in dlt listener: order-topic-dlt-0@4
2024-09-10 13:46:50 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application PAYMENT-SERVICE with eureka with status DOWN
2024-09-10 13:46:50 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1725965210288, current=DOWN, previous=UP]
2024-09-10 13:46:50 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Revoke previously assigned partitions order-topic-retry-6000-0
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Revoke previously assigned partitions order-topic-0, order-topic-1, order-topic-2
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Revoke previously assigned partitions order-topic-dlt-0
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Revoke previously assigned partitions order-topic-retry-3000-0
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions revoked: [order-topic-retry-6000-0]
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions revoked: [order-topic-dlt-0]
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions revoked: [order-topic-retry-3000-0]
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions revoked: [order-topic-0, order-topic-1, order-topic-2]
2024-09-10 13:46:50 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Member consumer-payment-service-4-aadad71c-8763-47c4-996f-293c48c1ca8e sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Member consumer-payment-service-dlt-1-90ef58fa-2cb9-4bb5-be2d-e970fccb1d53 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Member consumer-payment-service-retry-3000-2-88e94512-8239-4709-b8ad-182035f02299 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Member consumer-payment-service-retry-6000-3-0ddde4b1-cb97-4382-a9ca-49f944697ba0 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Unsubscribed all topics or patterns and assigned partitions
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Unsubscribed all topics or patterns and assigned partitions
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Unsubscribed all topics or patterns and assigned partitions
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Unsubscribed all topics or patterns and assigned partitions
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-6000-3 unregistered
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: Consumer stopped
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-3000-2 unregistered
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: Consumer stopped
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-dlt-1 unregistered
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: Consumer stopped
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-4 unregistered
2024-09-10 13:46:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: Consumer stopped
2024-09-10 13:46:50 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2024-09-10 13:46:50 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 13:46:50 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 13:46:50 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 13:46:50 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2024-09-10 13:46:50 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-10 13:46:50 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-10 13:46:50 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-10 13:46:50 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2024-09-10 13:46:53 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2024-09-10 13:46:53 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - deregister  status: 200
2024-09-10 13:46:53 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2024-09-10 13:47:03 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-09-10 13:47:03 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Starting PaymentServiceApplication using Java 17.0.11 with PID 50331 (/home/kacha/Project/e-commerce/paymentservice/target/classes started by kacha in /home/kacha/Project/e-commerce/paymentservice)
2024-09-10 13:47:03 [restartedMain] INFO  c.e.p.PaymentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2024-09-10 13:47:03 [restartedMain] INFO  o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in /home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar referenced one or more files that do not exist: file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-api-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/txw2-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/istack-commons-runtime-3.0.7.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/stax-ex-1.8.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/FastInfoset-1.2.15.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/javax.activation-api-1.2.0.jar
2024-09-10 13:47:03 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-09-10 13:47:03 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-09-10 13:47:03 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-10 13:47:03 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 61 ms. Found 1 JPA repository interface.
2024-09-10 13:47:04 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=1d06102a-a445-30a5-b3c3-b7d07dc1ba04
2024-09-10 13:47:04 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-10 13:47:04 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:47:04 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:47:04 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:47:04 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:47:04 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$710/0x00007654f0488eb8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:47:04 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:47:04 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:47:04 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:47:04 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:47:04 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:47:04 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:47:04 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:47:04 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:47:04 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:47:04 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:47:04 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:47:04 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:47:04 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:47:04 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:47:04 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-10 13:47:04 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:47:04 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 13:47:04 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8183 (http)
2024-09-10 13:47:04 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8183"]
2024-09-10 13:47:04 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-10 13:47:04 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-09-10 13:47:04 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/payments] - Initializing Spring embedded WebApplicationContext
2024-09-10 13:47:04 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 982 ms
2024-09-10 13:47:04 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-10 13:47:04 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-10 13:47:04 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-10 13:47:04 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-10 13:47:04 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-10 13:47:04 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1a35a59d
2024-09-10 13:47:04 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-10 13:47:05 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JTA platform [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
2024-09-10 13:47:05 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-10 13:47:05 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-10 13:47:05 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
2024-09-10 13:47:06 [restartedMain] INFO  o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2024-09-10 13:47:06 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-10 13:47:07 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-10 13:47:07 [restartedMain] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-09-10 13:47:07 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 13:47:07 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 13:47:07 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725965227583
2024-09-10 13:47:07 [restartedMain] INFO  o.s.kafka.core.KafkaAdmin - Topic 'order-topic' exists but has a different partition count: 3 not 1
2024-09-10 13:47:07 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2024-09-10 13:47:07 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 13:47:07 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 13:47:07 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 13:47:07 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2024-09-10 13:47:07 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2024-09-10 13:47:07 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 13:47:07 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2024-09-10 13:47:07 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2024-09-10 13:47:07 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2024-09-10 13:47:07 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2024-09-10 13:47:07 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2024-09-10 13:47:07 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2024-09-10 13:47:07 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2024-09-10 13:47:07 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2024-09-10 13:47:07 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2024-09-10 13:47:07 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-09-10 13:47:07 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1725965227924 with initial instances count: 3
2024-09-10 13:47:07 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application PAYMENT-SERVICE with eureka with status UP
2024-09-10 13:47:07 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1725965227926, current=UP, previous=STARTING]
2024-09-10 13:47:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/localhost:PAYMENT-SERVICE:8183: registering service...
2024-09-10 13:47:07 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8183"]
2024-09-10 13:47:07 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8183 (http) with context path '/payments'
2024-09-10 13:47:07 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8183
2024-09-10 13:47:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/localhost:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-10 13:47:08 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-dlt-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-dlt
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 13:47:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 13:47:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 13:47:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725965228073
2024-09-10 13:47:08 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Subscribed to topic(s): order-topic-dlt
2024-09-10 13:47:08 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-3000-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-3000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 13:47:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 13:47:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 13:47:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725965228084
2024-09-10 13:47:08 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Subscribed to topic(s): order-topic-retry-3000
2024-09-10 13:47:08 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-6000-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-6000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-10 13:47:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 13:47:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 13:47:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725965228088
2024-09-10 13:47:08 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Subscribed to topic(s): order-topic-retry-6000
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-10 13:47:08 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-10 13:47:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-10 13:47:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 13:47:08 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725965228093
2024-09-10 13:47:08 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Subscribed to topic(s): order-topic
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-dlt-1-941c58c1-79e1-4337-977a-20051c9af212
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-4-364ae83c-cba3-43bf-a7a9-f0b6a9654bb4
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-3000-2-9389117e-7725-4cc7-b1cd-66b60baf660b
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-6000-3-f6993547-856e-4efb-9f87-2ae5370338fc
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully joined group with generation Generation{generationId=7, memberId='consumer-payment-service-4-364ae83c-cba3-43bf-a7a9-f0b6a9654bb4', protocol='range'}
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully joined group with generation Generation{generationId=7, memberId='consumer-payment-service-dlt-1-941c58c1-79e1-4337-977a-20051c9af212', protocol='range'}
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully joined group with generation Generation{generationId=7, memberId='consumer-payment-service-retry-3000-2-9389117e-7725-4cc7-b1cd-66b60baf660b', protocol='range'}
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully joined group with generation Generation{generationId=7, memberId='consumer-payment-service-retry-6000-3-f6993547-856e-4efb-9f87-2ae5370338fc', protocol='range'}
2024-09-10 13:47:08 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Started PaymentServiceApplication in 6.07 seconds (process running for 6.293)
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Finished assignment for group at generation 7: {consumer-payment-service-retry-6000-3-f6993547-856e-4efb-9f87-2ae5370338fc=Assignment(partitions=[order-topic-retry-6000-0])}
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Finished assignment for group at generation 7: {consumer-payment-service-4-364ae83c-cba3-43bf-a7a9-f0b6a9654bb4=Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])}
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Finished assignment for group at generation 7: {consumer-payment-service-retry-3000-2-9389117e-7725-4cc7-b1cd-66b60baf660b=Assignment(partitions=[order-topic-retry-3000-0])}
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Finished assignment for group at generation 7: {consumer-payment-service-dlt-1-941c58c1-79e1-4337-977a-20051c9af212=Assignment(partitions=[order-topic-dlt-0])}
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully synced group in generation Generation{generationId=7, memberId='consumer-payment-service-dlt-1-941c58c1-79e1-4337-977a-20051c9af212', protocol='range'}
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully synced group in generation Generation{generationId=7, memberId='consumer-payment-service-retry-6000-3-f6993547-856e-4efb-9f87-2ae5370338fc', protocol='range'}
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully synced group in generation Generation{generationId=7, memberId='consumer-payment-service-retry-3000-2-9389117e-7725-4cc7-b1cd-66b60baf660b', protocol='range'}
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully synced group in generation Generation{generationId=7, memberId='consumer-payment-service-4-364ae83c-cba3-43bf-a7a9-f0b6a9654bb4', protocol='range'}
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Notifying assignor about the new Assignment(partitions=[order-topic-dlt-0])
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Notifying assignor about the new Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-6000-0])
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-3000-0])
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Adding newly assigned partitions: order-topic-retry-6000-0
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Adding newly assigned partitions: order-topic-0, order-topic-1, order-topic-2
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Adding newly assigned partitions: order-topic-retry-3000-0
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Adding newly assigned partitions: order-topic-dlt-0
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Setting offset for partition order-topic-dlt-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Setting offset for partition order-topic-retry-3000-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-2 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Setting offset for partition order-topic-retry-6000-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-1 to the committed offset FetchPosition{offset=9, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions assigned: [order-topic-dlt-0]
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions assigned: [order-topic-retry-6000-0]
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions assigned: [order-topic-retry-3000-0]
2024-09-10 13:47:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions assigned: [order-topic-0, order-topic-1, order-topic-2]
2024-09-10 13:47:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - -------------------------------------Test reult-------->:OOPPDDEE
2024-09-10 13:47:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Order code =============================>:OOPPDDEE
2024-09-10 13:47:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Status     =============================>::PENDING
2024-09-10 13:47:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Amount     =============================>:88888.00
2024-09-10 13:47:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - CreatedAt  =============================>:2024-09-10T13:47:32.360726
2024-09-10 13:47:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Key      :7530801a-d1fb-47fd-bcbe-01fb66df15f3
2024-09-10 13:47:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Value    :OOPPDDEE
2024-09-10 13:47:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Partition:1
2024-09-10 13:47:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.controller.PaymentController - Off set  :9
2024-09-10 13:52:07 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 13:56:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 13:56:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 13:56:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 13:56:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 13:57:07 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 14:02:07 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 14:07:07 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 14:12:07 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 14:17:07 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 14:22:07 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 14:27:07 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 14:32:07 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 14:37:07 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 14:40:26 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application PAYMENT-SERVICE with eureka with status DOWN
2024-09-10 14:40:26 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1725968426400, current=DOWN, previous=UP]
2024-09-10 14:40:26 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/localhost:PAYMENT-SERVICE:8183: registering service...
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Revoke previously assigned partitions order-topic-retry-3000-0
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Revoke previously assigned partitions order-topic-dlt-0
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Revoke previously assigned partitions order-topic-0, order-topic-1, order-topic-2
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Revoke previously assigned partitions order-topic-retry-6000-0
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions revoked: [order-topic-retry-3000-0]
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions revoked: [order-topic-dlt-0]
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions revoked: [order-topic-retry-6000-0]
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions revoked: [order-topic-0, order-topic-1, order-topic-2]
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Member consumer-payment-service-retry-3000-2-9389117e-7725-4cc7-b1cd-66b60baf660b sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Member consumer-payment-service-dlt-1-941c58c1-79e1-4337-977a-20051c9af212 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Member consumer-payment-service-retry-6000-3-f6993547-856e-4efb-9f87-2ae5370338fc sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Member consumer-payment-service-4-364ae83c-cba3-43bf-a7a9-f0b6a9654bb4 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Unsubscribed all topics or patterns and assigned partitions
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Unsubscribed all topics or patterns and assigned partitions
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Unsubscribed all topics or patterns and assigned partitions
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Unsubscribed all topics or patterns and assigned partitions
2024-09-10 14:40:26 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/localhost:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-dlt-1 unregistered
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-6000-3 unregistered
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-4 unregistered
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: Consumer stopped
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: Consumer stopped
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: Consumer stopped
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-3000-2 unregistered
2024-09-10 14:40:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: Consumer stopped
2024-09-10 14:40:26 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-10 14:40:26 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-10 14:40:26 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-10 14:40:26 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2024-09-10 14:40:29 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2024-09-10 14:40:29 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/localhost:PAYMENT-SERVICE:8183 - deregister  status: 200
2024-09-10 14:40:29 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2024-09-10 14:40:38 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-09-10 14:40:38 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Starting PaymentServiceApplication using Java 17.0.11 with PID 53108 (/home/kacha/Project/e-commerce/paymentservice/target/classes started by kacha in /home/kacha/Project/e-commerce/paymentservice)
2024-09-10 14:40:38 [restartedMain] INFO  c.e.p.PaymentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2024-09-10 14:40:38 [restartedMain] INFO  o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in /home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar referenced one or more files that do not exist: file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-api-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/txw2-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/istack-commons-runtime-3.0.7.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/stax-ex-1.8.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/FastInfoset-1.2.15.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/javax.activation-api-1.2.0.jar
2024-09-10 14:40:38 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-09-10 14:40:38 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-09-10 14:40:39 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-10 14:40:39 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 69 ms. Found 1 JPA repository interface.
2024-09-10 14:40:39 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=a71c9a81-1f5c-3ad0-bc08-1ed0a0fec2b9
2024-09-10 14:40:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-10 14:40:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:40:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:40:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:40:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:40:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$710/0x00007581544b0eb8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:40:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:40:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:40:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:40:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:40:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:40:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:40:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:40:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:40:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:40:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:40:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:40:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:40:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:40:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:40:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-10 14:40:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:40:39 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:40:39 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8183 (http)
2024-09-10 14:40:39 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8183"]
2024-09-10 14:40:39 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-10 14:40:39 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-09-10 14:40:39 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/payments] - Initializing Spring embedded WebApplicationContext
2024-09-10 14:40:39 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1183 ms
2024-09-10 14:40:39 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-10 14:40:39 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-10 14:40:39 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-10 14:40:39 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-10 14:40:39 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-10 14:40:40 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5d6c1c05
2024-09-10 14:40:40 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-10 14:40:40 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JTA platform [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
2024-09-10 14:40:40 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-10 14:40:41 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-10 14:40:41 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
2024-09-10 14:40:41 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-10 14:40:41 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-10 14:40:41 [restartedMain] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-09-10 14:40:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 14:40:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 14:40:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725968441498
2024-09-10 14:40:41 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2024-09-10 14:40:41 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 14:40:41 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 14:40:41 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 14:40:41 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2024-09-10 14:40:41 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2024-09-10 14:40:41 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 14:40:41 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2024-09-10 14:40:41 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2024-09-10 14:40:41 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2024-09-10 14:40:41 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2024-09-10 14:40:41 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2024-09-10 14:40:41 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2024-09-10 14:40:41 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2024-09-10 14:40:41 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2024-09-10 14:40:41 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2024-09-10 14:40:41 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-09-10 14:40:41 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1725968441875 with initial instances count: 3
2024-09-10 14:40:41 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application PAYMENT-SERVICE with eureka with status UP
2024-09-10 14:40:41 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1725968441878, current=UP, previous=STARTING]
2024-09-10 14:40:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-10 14:40:41 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8183"]
2024-09-10 14:40:41 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8183 (http) with context path '/payments'
2024-09-10 14:40:41 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8183
2024-09-10 14:40:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-10 14:40:41 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-dlt-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-dlt
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 14:40:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 14:40:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 14:40:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725968441972
2024-09-10 14:40:41 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Subscribed to topic(s): order-topic-dlt
2024-09-10 14:40:41 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-3000-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-3000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 14:40:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 14:40:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 14:40:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725968441978
2024-09-10 14:40:41 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Subscribed to topic(s): order-topic-retry-3000
2024-09-10 14:40:41 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-6000-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-6000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 14:40:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 14:40:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 14:40:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725968441984
2024-09-10 14:40:41 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Subscribed to topic(s): order-topic-retry-6000
2024-09-10 14:40:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 14:40:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 14:40:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-10 14:40:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-10 14:40:41 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 14:40:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-10 14:40:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-10 14:40:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 14:40:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-10 14:40:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-10 14:40:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 14:40:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 14:40:41 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725968441989
2024-09-10 14:40:41 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Subscribed to topic(s): order-topic
2024-09-10 14:40:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 14:40:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-10 14:40:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-6000-3-2a980c73-e2c2-4965-bd7a-f32dabc89866
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-dlt-1-1d0776ec-44f1-411f-ba4f-b524704bddfc
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-4-97a69e58-08fe-4cb9-8d76-ffdfeecd004b
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-3000-2-06f5a30a-91f3-4d91-a8c4-25a6097eae9d
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully joined group with generation Generation{generationId=9, memberId='consumer-payment-service-4-97a69e58-08fe-4cb9-8d76-ffdfeecd004b', protocol='range'}
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully joined group with generation Generation{generationId=9, memberId='consumer-payment-service-retry-3000-2-06f5a30a-91f3-4d91-a8c4-25a6097eae9d', protocol='range'}
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully joined group with generation Generation{generationId=9, memberId='consumer-payment-service-retry-6000-3-2a980c73-e2c2-4965-bd7a-f32dabc89866', protocol='range'}
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully joined group with generation Generation{generationId=9, memberId='consumer-payment-service-dlt-1-1d0776ec-44f1-411f-ba4f-b524704bddfc', protocol='range'}
2024-09-10 14:40:42 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Started PaymentServiceApplication in 3.91 seconds (process running for 4.151)
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Finished assignment for group at generation 9: {consumer-payment-service-dlt-1-1d0776ec-44f1-411f-ba4f-b524704bddfc=Assignment(partitions=[order-topic-dlt-0])}
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Finished assignment for group at generation 9: {consumer-payment-service-retry-3000-2-06f5a30a-91f3-4d91-a8c4-25a6097eae9d=Assignment(partitions=[order-topic-retry-3000-0])}
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Finished assignment for group at generation 9: {consumer-payment-service-4-97a69e58-08fe-4cb9-8d76-ffdfeecd004b=Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])}
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Finished assignment for group at generation 9: {consumer-payment-service-retry-6000-3-2a980c73-e2c2-4965-bd7a-f32dabc89866=Assignment(partitions=[order-topic-retry-6000-0])}
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully synced group in generation Generation{generationId=9, memberId='consumer-payment-service-retry-6000-3-2a980c73-e2c2-4965-bd7a-f32dabc89866', protocol='range'}
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully synced group in generation Generation{generationId=9, memberId='consumer-payment-service-retry-3000-2-06f5a30a-91f3-4d91-a8c4-25a6097eae9d', protocol='range'}
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully synced group in generation Generation{generationId=9, memberId='consumer-payment-service-4-97a69e58-08fe-4cb9-8d76-ffdfeecd004b', protocol='range'}
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully synced group in generation Generation{generationId=9, memberId='consumer-payment-service-dlt-1-1d0776ec-44f1-411f-ba4f-b524704bddfc', protocol='range'}
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-3000-0])
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-6000-0])
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Notifying assignor about the new Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Notifying assignor about the new Assignment(partitions=[order-topic-dlt-0])
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Adding newly assigned partitions: order-topic-retry-3000-0
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Adding newly assigned partitions: order-topic-retry-6000-0
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Adding newly assigned partitions: order-topic-0, order-topic-1, order-topic-2
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Adding newly assigned partitions: order-topic-dlt-0
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-2 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Setting offset for partition order-topic-retry-6000-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Setting offset for partition order-topic-retry-3000-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Setting offset for partition order-topic-dlt-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-1 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions assigned: [order-topic-retry-6000-0]
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions assigned: [order-topic-retry-3000-0]
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions assigned: [order-topic-dlt-0]
2024-09-10 14:40:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions assigned: [order-topic-0, order-topic-1, order-topic-2]
2024-09-10 14:45:41 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 14:49:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 14:49:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 14:49:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 14:49:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 14:50:41 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 14:55:41 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 14:59:12 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application PAYMENT-SERVICE with eureka with status DOWN
2024-09-10 14:59:12 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1725969552762, current=DOWN, previous=UP]
2024-09-10 14:59:12 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Revoke previously assigned partitions order-topic-0, order-topic-1, order-topic-2
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Revoke previously assigned partitions order-topic-retry-6000-0
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Revoke previously assigned partitions order-topic-dlt-0
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Revoke previously assigned partitions order-topic-retry-3000-0
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions revoked: [order-topic-0, order-topic-1, order-topic-2]
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions revoked: [order-topic-retry-3000-0]
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions revoked: [order-topic-retry-6000-0]
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions revoked: [order-topic-dlt-0]
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Member consumer-payment-service-4-97a69e58-08fe-4cb9-8d76-ffdfeecd004b sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Member consumer-payment-service-retry-3000-2-06f5a30a-91f3-4d91-a8c4-25a6097eae9d sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Member consumer-payment-service-retry-6000-3-2a980c73-e2c2-4965-bd7a-f32dabc89866 sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Member consumer-payment-service-dlt-1-1d0776ec-44f1-411f-ba4f-b524704bddfc sending LeaveGroup request to coordinator HP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Unsubscribed all topics or patterns and assigned partitions
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Unsubscribed all topics or patterns and assigned partitions
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Unsubscribed all topics or patterns and assigned partitions
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Unsubscribed all topics or patterns and assigned partitions
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 14:59:12 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 14:59:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: consumer pro-actively leaving the group
2024-09-10 14:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 14:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 14:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 14:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 14:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 14:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 14:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 14:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 14:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 14:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 14:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 14:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 14:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-3000-2 unregistered
2024-09-10 14:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: Consumer stopped
2024-09-10 14:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-dlt-1 unregistered
2024-09-10 14:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: Consumer stopped
2024-09-10 14:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-retry-6000-3 unregistered
2024-09-10 14:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: Consumer stopped
2024-09-10 14:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-payment-service-4 unregistered
2024-09-10 14:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: Consumer stopped
2024-09-10 14:59:13 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-10 14:59:13 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-10 14:59:13 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-10 14:59:13 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2024-09-10 14:59:16 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2024-09-10 14:59:16 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - deregister  status: 200
2024-09-10 14:59:16 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2024-09-10 14:59:24 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-09-10 14:59:24 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Starting PaymentServiceApplication using Java 17.0.11 with PID 54105 (/home/kacha/Project/e-commerce/paymentservice/target/classes started by kacha in /home/kacha/Project/e-commerce/paymentservice)
2024-09-10 14:59:24 [restartedMain] INFO  c.e.p.PaymentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2024-09-10 14:59:24 [restartedMain] INFO  o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in /home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar referenced one or more files that do not exist: file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-api-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/txw2-2.3.1.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/istack-commons-runtime-3.0.7.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/stax-ex-1.8.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/FastInfoset-1.2.15.jar,file:/home/kacha/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/javax.activation-api-1.2.0.jar
2024-09-10 14:59:24 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-09-10 14:59:24 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-09-10 14:59:24 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-10 14:59:24 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56 ms. Found 1 JPA repository interface.
2024-09-10 14:59:24 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=a71c9a81-1f5c-3ad0-bc08-1ed0a0fec2b9
2024-09-10 14:59:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-10 14:59:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:59:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:59:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:59:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:59:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$710/0x0000772854494400] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:59:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:59:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:59:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:59:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:59:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:59:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:59:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:59:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:59:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:59:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:59:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:59:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:59:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:59:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:59:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-10 14:59:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:59:25 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-10 14:59:25 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8183 (http)
2024-09-10 14:59:25 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8183"]
2024-09-10 14:59:25 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-10 14:59:25 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-09-10 14:59:25 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/payments] - Initializing Spring embedded WebApplicationContext
2024-09-10 14:59:25 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 945 ms
2024-09-10 14:59:25 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-10 14:59:25 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-10 14:59:25 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-10 14:59:25 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-10 14:59:25 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-10 14:59:25 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@544dd8e7
2024-09-10 14:59:25 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-10 14:59:26 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JTA platform [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
2024-09-10 14:59:26 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-10 14:59:26 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-10 14:59:26 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
2024-09-10 14:59:26 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-10 14:59:26 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-10 14:59:26 [restartedMain] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-09-10 14:59:26 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 14:59:26 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 14:59:26 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725969566818
2024-09-10 14:59:26 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2024-09-10 14:59:26 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-10 14:59:26 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-10 14:59:26 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-10 14:59:26 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2024-09-10 14:59:26 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2024-09-10 14:59:26 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 14:59:27 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2024-09-10 14:59:27 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2024-09-10 14:59:27 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2024-09-10 14:59:27 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2024-09-10 14:59:27 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2024-09-10 14:59:27 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2024-09-10 14:59:27 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2024-09-10 14:59:27 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2024-09-10 14:59:27 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2024-09-10 14:59:27 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-09-10 14:59:27 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1725969567134 with initial instances count: 2
2024-09-10 14:59:27 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application PAYMENT-SERVICE with eureka with status UP
2024-09-10 14:59:27 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1725969567136, current=UP, previous=STARTING]
2024-09-10 14:59:27 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183: registering service...
2024-09-10 14:59:27 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8183"]
2024-09-10 14:59:27 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8183 (http) with context path '/payments'
2024-09-10 14:59:27 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8183
2024-09-10 14:59:27 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_PAYMENT-SERVICE/HP:PAYMENT-SERVICE:8183 - registration status: 204
2024-09-10 14:59:27 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-dlt-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-dlt
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 14:59:27 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 14:59:27 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 14:59:27 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725969567192
2024-09-10 14:59:27 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Subscribed to topic(s): order-topic-dlt
2024-09-10 14:59:27 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-3000-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-3000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 14:59:27 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 14:59:27 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 14:59:27 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725969567201
2024-09-10 14:59:27 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Subscribed to topic(s): order-topic-retry-3000
2024-09-10 14:59:27 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-retry-6000-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service-retry-6000
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 14:59:27 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 14:59:27 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 14:59:27 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725969567209
2024-09-10 14:59:27 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Subscribed to topic(s): order-topic-retry-6000
2024-09-10 14:59:27 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-service-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-10 14:59:27 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.2
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-10 14:59:27 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: c4deed513057c94e
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-10 14:59:27 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725969567212
2024-09-10 14:59:27 [restartedMain] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Subscribed to topic(s): order-topic
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Cluster ID: 9ho6wN2PQFOlaw_Ud3g5yA
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Discovered group coordinator HP:9092 (id: 2147483647 rack: null)
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-3000-2-f537e642-2775-4c22-9280-6312e893248d
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-dlt-1-cdc4f9bd-7103-4173-a1d8-ac6222ba1be0
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-4-6daa2083-2d28-47af-ae2f-12653f8bb947
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: need to re-join with the given member-id: consumer-payment-service-retry-6000-3-1c396187-b5d9-4546-a190-b621bffd0533
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] (Re-)joining group
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] (Re-)joining group
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] (Re-)joining group
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] (Re-)joining group
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully joined group with generation Generation{generationId=11, memberId='consumer-payment-service-retry-3000-2-f537e642-2775-4c22-9280-6312e893248d', protocol='range'}
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully joined group with generation Generation{generationId=11, memberId='consumer-payment-service-4-6daa2083-2d28-47af-ae2f-12653f8bb947', protocol='range'}
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully joined group with generation Generation{generationId=11, memberId='consumer-payment-service-dlt-1-cdc4f9bd-7103-4173-a1d8-ac6222ba1be0', protocol='range'}
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully joined group with generation Generation{generationId=11, memberId='consumer-payment-service-retry-6000-3-1c396187-b5d9-4546-a190-b621bffd0533', protocol='range'}
2024-09-10 14:59:27 [restartedMain] INFO  c.e.p.PaymentServiceApplication - Started PaymentServiceApplication in 3.177 seconds (process running for 3.38)
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Finished assignment for group at generation 11: {consumer-payment-service-retry-3000-2-f537e642-2775-4c22-9280-6312e893248d=Assignment(partitions=[order-topic-retry-3000-0])}
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Finished assignment for group at generation 11: {consumer-payment-service-4-6daa2083-2d28-47af-ae2f-12653f8bb947=Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])}
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Finished assignment for group at generation 11: {consumer-payment-service-dlt-1-cdc4f9bd-7103-4173-a1d8-ac6222ba1be0=Assignment(partitions=[order-topic-dlt-0])}
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Finished assignment for group at generation 11: {consumer-payment-service-retry-6000-3-1c396187-b5d9-4546-a190-b621bffd0533=Assignment(partitions=[order-topic-retry-6000-0])}
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Successfully synced group in generation Generation{generationId=11, memberId='consumer-payment-service-retry-3000-2-f537e642-2775-4c22-9280-6312e893248d', protocol='range'}
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Successfully synced group in generation Generation{generationId=11, memberId='consumer-payment-service-retry-6000-3-1c396187-b5d9-4546-a190-b621bffd0533', protocol='range'}
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Successfully synced group in generation Generation{generationId=11, memberId='consumer-payment-service-dlt-1-cdc4f9bd-7103-4173-a1d8-ac6222ba1be0', protocol='range'}
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Notifying assignor about the new Assignment(partitions=[order-topic-dlt-0])
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-6000-0])
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Notifying assignor about the new Assignment(partitions=[order-topic-retry-3000-0])
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Successfully synced group in generation Generation{generationId=11, memberId='consumer-payment-service-4-6daa2083-2d28-47af-ae2f-12653f8bb947', protocol='range'}
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Notifying assignor about the new Assignment(partitions=[order-topic-0, order-topic-1, order-topic-2])
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Adding newly assigned partitions: order-topic-retry-3000-0
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Adding newly assigned partitions: order-topic-0, order-topic-1, order-topic-2
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Adding newly assigned partitions: order-topic-retry-6000-0
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Adding newly assigned partitions: order-topic-dlt-0
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Setting offset for partition order-topic-retry-3000-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Setting offset for partition order-topic-dlt-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Setting offset for partition order-topic-retry-6000-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-2 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Setting offset for partition order-topic-1 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[HP:9092 (id: 0 rack: null)], epoch=0}}
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-3000: partitions assigned: [order-topic-retry-3000-0]
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service: partitions assigned: [order-topic-0, order-topic-1, order-topic-2]
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-dlt: partitions assigned: [order-topic-dlt-0]
2024-09-10 14:59:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - payment-service-retry-6000: partitions assigned: [order-topic-retry-6000-0]
2024-09-10 15:04:27 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 15:08:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-dlt-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-dlt-1, groupId=payment-service-dlt] Node -1 disconnected.
2024-09-10 15:08:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-3000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-3000-2, groupId=payment-service-retry-3000] Node -1 disconnected.
2024-09-10 15:08:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-4, groupId=payment-service] Node -1 disconnected.
2024-09-10 15:08:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-retry-6000-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-payment-service-retry-6000-3, groupId=payment-service-retry-6000] Node -1 disconnected.
2024-09-10 15:09:27 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 15:14:27 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 15:19:27 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 15:24:27 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 15:29:27 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 15:34:27 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-09-10 15:39:27 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
